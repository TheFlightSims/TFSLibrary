/*     */ package scala.collection.convert;
/*     */ 
/*     */ import java.util.AbstractCollection;
/*     */ import java.util.AbstractList;
/*     */ import java.util.AbstractMap;
/*     */ import java.util.AbstractSet;
/*     */ import java.util.ArrayList;
/*     */ import java.util.Collection;
/*     */ import java.util.Dictionary;
/*     */ import java.util.Enumeration;
/*     */ import java.util.HashMap;
/*     */ import java.util.HashSet;
/*     */ import java.util.Iterator;
/*     */ import java.util.LinkedHashSet;
/*     */ import java.util.List;
/*     */ import java.util.Map;
/*     */ import java.util.Properties;
/*     */ import java.util.Set;
/*     */ import java.util.concurrent.ConcurrentHashMap;
/*     */ import java.util.concurrent.ConcurrentMap;
/*     */ import scala.Function1;
/*     */ import scala.MatchError;
/*     */ import scala.Option;
/*     */ import scala.Product;
/*     */ import scala.Serializable;
/*     */ import scala.Some;
/*     */ import scala.Tuple2;
/*     */ import scala.collection.AbstractIterable;
/*     */ import scala.collection.AbstractIterator;
/*     */ import scala.collection.GenIterable;
/*     */ import scala.collection.GenMap;
/*     */ import scala.collection.GenSeq;
/*     */ import scala.collection.GenSet;
/*     */ import scala.collection.GenTraversable;
/*     */ import scala.collection.GenTraversableOnce;
/*     */ import scala.collection.Iterable;
/*     */ import scala.collection.Iterator;
/*     */ import scala.collection.Map;
/*     */ import scala.collection.Seq;
/*     */ import scala.collection.Set;
/*     */ import scala.collection.Traversable;
/*     */ import scala.collection.TraversableView;
/*     */ import scala.collection.concurrent.Map;
/*     */ import scala.collection.generic.Growable;
/*     */ import scala.collection.generic.Shrinkable;
/*     */ import scala.collection.generic.Subtractable;
/*     */ import scala.collection.mutable.AbstractBuffer;
/*     */ import scala.collection.mutable.AbstractMap;
/*     */ import scala.collection.mutable.AbstractSet;
/*     */ import scala.collection.mutable.ArrayBuffer;
/*     */ import scala.collection.mutable.Buffer;
/*     */ import scala.collection.mutable.Builder;
/*     */ import scala.collection.mutable.ConcurrentMap;
/*     */ import scala.collection.mutable.Map;
/*     */ import scala.collection.mutable.MapLike;
/*     */ import scala.collection.mutable.Seq;
/*     */ import scala.collection.mutable.Set;
/*     */ import scala.collection.mutable.SetLike;
/*     */ import scala.reflect.ScalaSignature;
/*     */ import scala.runtime.AbstractFunction1;
/*     */ import scala.runtime.BoxesRunTime;
/*     */ 
/*     */ @ScalaSignature(bytes = "\006\001=%c\001C\001\003!\003\r\t\001\002\005\003\021]\023\030\r\0359feNT!a\001\003\002\017\r|gN^3si*\021QAB\001\013G>dG.Z2uS>t'\"A\004\002\013M\034\027\r\\1\024\005\001I\001C\001\006\f\033\0051\021B\001\007\007\005\031\te.\037*fM\")a\002\001C\001!\0051A%\0338ji\022\032\001\001F\001\022!\tQ!#\003\002\024\r\t!QK\\5u\r\035)\002\001%A\002\002Y\021A#\023;fe\006\024G.Z,sCB\004XM\035+sC&$XCA\f#'\t!\002\004E\002\032=\001j\021A\007\006\0037q\tA!\036;jY*\tQ$\001\003kCZ\f\027BA\020\033\005I\t%m\035;sC\016$8i\0347mK\016$\030n\0348\021\005\005\022C\002\001\003\006GQ\021\r\001\n\002\002\003F\021Q\005\013\t\003\025\031J!a\n\004\003\0179{G\017[5oOB\021!\"K\005\003U\031\0211!\0218z\021\025qA\003\"\001\021\021\035iCC1A\007\0029\n!\"\0368eKJd\0270\0338h+\005y\003c\001\0312A5\tA!\003\0023\t\tA\021\n^3sC\ndW\rC\0035)\021\005Q'\001\003tSj,G#\001\034\021\005)9\024B\001\035\007\005\rIe\016\036\005\006uQ!\teO\001\tSR,'/\031;peR\tA\bE\002>}\001j\021\001\001\004\005\001\001\005IA\bJi\026\024\030\r^8s/J\f\007\017]3s+\t\tEj\005\004?\005\"k\005k\025\t\003\007\032k\021\001\022\006\003\013r\tA\001\\1oO&\021q\t\022\002\007\037\nTWm\031;\021\007eI5*\003\002K5\tA\021\n^3sCR|'\017\005\002\"\031\022)1E\020b\001IA\031\021DT&\n\005=S\"aC#ok6,'/\031;j_:\004\"AC)\n\005I3!a\002)s_\022,8\r\036\t\003\025QK!!\026\004\003\031M+'/[1mSj\f'\r\\3\t\0215r$Q3A\005\002]+\022\001\027\t\004ae[\025B\001&\005\021!YfH!E!\002\023A\026aC;oI\026\024H._5oO\002BQ!\030 \005\002y\013a\001P5oSRtDCA0a!\ridh\023\005\006[q\003\r\001\027\005\006Ez\"\taY\001\bQ\006\034h*\032=u)\005!\007C\001\006f\023\t1gAA\004C_>dW-\0318\t\013!tD\021A5\002\t9,\007\020\036\013\002\027\")1N\020C\001G\006y\001.Y:N_J,W\t\\3nK:$8\017C\003n}\021\005\021.A\006oKb$X\t\\3nK:$\b\"B8?\t\003\001\030A\002:f[>4X\rF\001&\021\035\021h(!A\005\002M\fAaY8qsV\021Ao\036\013\003kb\0042!\020 w!\t\ts\017B\003$c\n\007A\005C\004.cB\005\t\031A=\021\007AJf\017C\004|}E\005I\021\001?\002\035\r|\007/\037\023eK\032\fW\017\034;%cU\031Q0!\005\026\003yT#\001W@,\005\005\005\001\003BA\002\003\033i!!!\002\013\t\005\035\021\021B\001\nk:\034\007.Z2lK\022T1!a\003\007\003)\tgN\\8uCRLwN\\\005\005\003\037\t)AA\tv]\016DWmY6fIZ\013'/[1oG\026$Qa\t>C\002\021B\021\"!\006?\003\003%\t%a\006\002\033A\024x\016Z;diB\023XMZ5y+\t\tI\002E\002D\0037I1!!\bE\005\031\031FO]5oO\"I\021\021\005 \002\002\023\005\0211E\001\raJ|G-^2u\003JLG/_\013\002m!I\021q\005 \002\002\023\005\021\021F\001\017aJ|G-^2u\0132,W.\0328u)\rA\0231\006\005\n\003[\t)#!AA\002Y\n1\001\037\0232\021%\t\tDPA\001\n\003\n\031$A\bqe>$Wo\031;Ji\026\024\030\r^8s+\t\t)\004E\00213\"B\021\"!\017?\003\003%\t!a\017\002\021\r\fg.R9vC2$2\001ZA\037\021%\ti#a\016\002\002\003\007\001\006\003\005\002By\n\t\021\"\0216\003!A\027m\0355D_\022,\007\"CA#}\005\005I\021IA$\003!!xn\025;sS:<GCAA\r\021%\tYEPA\001\n\003\ni%\001\004fcV\fGn\035\013\004I\006=\003\"CA\027\003\023\n\t\0211\001)\021\031\t\031\006\006C!G\0069\021n]#naRLx!CA,\001\005\005\t\022AA-\003=IE/\032:bi>\024xK]1qa\026\024\bcA\037\002\\\031Aq\bAA\001\022\003\tif\005\003\002\\%\031\006bB/\002\\\021\005\021\021\r\013\003\0033B!\"!\022\002\\\005\005IQIA$\021)\t9'a\027\002\002\023\005\025\021N\001\006CB\004H._\013\005\003W\n\t\b\006\003\002n\005M\004\003B\037?\003_\0022!IA9\t\031\031\023Q\rb\001I!9Q&!\032A\002\005U\004\003\002\031Z\003_B!\"!\037\002\\\005\005I\021QA>\003\035)h.\0319qYf,B!! \002\nR!\021qPAF!\025Q\021\021QAC\023\r\t\031I\002\002\007\037B$\030n\0348\021\tAJ\026q\021\t\004C\005%EAB\022\002x\t\007A\005\003\006\002\016\006]\024\021!a\001\003\037\0131\001\037\0231!\021id(a\"\t\025\005M\0251LA\001\n\023\t)*A\006sK\006$'+Z:pYZ,G#\001\"\007\r\005e\005\001AAN\005E!v.\023;fe\006$xN],sCB\004XM]\013\005\003;\013)kE\002\002\030&A!\"LAL\005\003\005\013\021BAQ!\021\001\024,a)\021\007\005\n)\013\002\004$\003/\023\r\001\n\005\b;\006]E\021AAU)\021\tY+!,\021\013u\n9*a)\t\0175\n9\0131\001\002\"\"A\021\021WAL\t\003\t\031,\001\004bg*\013g/Y\013\003\003k\003B!\020 \002$\0321\021\021\030\001A\003w\023\001CS%uKJ\fGo\034:Xe\006\004\b/\032:\026\t\005u\026qY\n\t\003o\013y,!3Q'B)\001'!1\002F&\031\0211\031\003\003!\005\0237\017\036:bGRLE/\032:bi>\024\bcA\021\002H\02211%a.C\002\021\002B\001M-\002F\"QQ&a.\003\026\004%\t!!4\026\005\005=\007\003B\rJ\003\013D!bWA\\\005#\005\013\021BAh\021\035i\026q\027C\001\003+$B!a6\002ZB)Q(a.\002F\"9Q&a5A\002\005=\007b\0022\0028\022\005\021Q\\\013\002I\"9\001.a.\005\002\005\005HCAAc\021%\021\030qWA\001\n\003\t)/\006\003\002h\0065H\003BAu\003_\004R!PA\\\003W\0042!IAw\t\031\031\0231\035b\001I!IQ&a9\021\002\003\007\021\021\037\t\0053%\013Y\017C\005|\003o\013\n\021\"\001\002vV!\021q_A~+\t\tIPK\002\002P~$aaIAz\005\004!\003BCA\013\003o\013\t\021\"\021\002\030!Q\021\021EA\\\003\003%\t!a\t\t\025\005\035\022qWA\001\n\003\021\031\001F\002)\005\013A\021\"!\f\003\002\005\005\t\031\001\034\t\025\005E\022qWA\001\n\003\n\031\004\003\006\002:\005]\026\021!C\001\005\027!2\001\032B\007\021%\tiC!\003\002\002\003\007\001\006C\005\002B\005]\026\021!C!k!Q\0211JA\\\003\003%\tEa\005\025\007\021\024)\002C\005\002.\tE\021\021!a\001Q\035I!\021\004\001\002\002#\005!1D\001\021\025&#XM]1u_J<&/\0319qKJ\0042!\020B\017\r%\tI\fAA\001\022\003\021yb\005\003\003\036%\031\006bB/\003\036\021\005!1\005\013\003\0057A!\"!\022\003\036\005\005IQIA$\021)\t9G!\b\002\002\023\005%\021F\013\005\005W\021\t\004\006\003\003.\tM\002#B\037\0028\n=\002cA\021\0032\02111Ea\nC\002\021Bq!\fB\024\001\004\021)\004\005\003\032\023\n=\002BCA=\005;\t\t\021\"!\003:U!!1\bB\")\021\021iD!\022\021\013)\t\tIa\020\021\teI%\021\t\t\004C\t\rCAB\022\0038\t\007A\005\003\006\002\016\n]\022\021!a\001\005\017\002R!PA\\\005\003B!\"a%\003\036\005\005I\021BAK\r\031\021i\005\001!\003P\t\031\"*\0228v[\026\024\030\r^5p]^\023\030\r\0359feV!!\021\013B,'!\021YEa\025\003ZA\033\006#\002\031\002B\nU\003cA\021\003X\02111Ea\023C\002\021\002B\001M-\003V!QQFa\023\003\026\004%\tA!\030\026\005\t}\003\003B\rO\005+B!b\027B&\005#\005\013\021\002B0\021\035i&1\nC\001\005K\"BAa\032\003jA)QHa\023\003V!9QFa\031A\002\t}\003b\0022\003L\021\005\021Q\034\005\bQ\n-C\021\001B8)\t\021)\006C\005s\005\027\n\t\021\"\001\003tU!!Q\017B>)\021\0219H! \021\013u\022YE!\037\021\007\005\022Y\b\002\004$\005c\022\r\001\n\005\n[\tE\004\023!a\001\005\002B!\007(\003z!I1Pa\023\022\002\023\005!1Q\013\005\005\013\023I)\006\002\003\b*\032!qL@\005\r\r\022\tI1\001%\021)\t)Ba\023\002\002\023\005\023q\003\005\013\003C\021Y%!A\005\002\005\r\002BCA\024\005\027\n\t\021\"\001\003\022R\031\001Fa%\t\023\0055\"qRA\001\002\0041\004BCA\031\005\027\n\t\021\"\021\0024!Q\021\021\bB&\003\003%\tA!'\025\007\021\024Y\nC\005\002.\t]\025\021!a\001Q!I\021\021\tB&\003\003%\t%\016\005\013\003\027\022Y%!A\005B\t\005Fc\0013\003$\"I\021Q\006BP\003\003\005\r\001K\004\n\005O\003\021\021!E\001\005S\0131CS#ok6,'/\031;j_:<&/\0319qKJ\0042!\020BV\r%\021i\005AA\001\022\003\021ik\005\003\003,&\031\006bB/\003,\022\005!\021\027\013\003\005SC!\"!\022\003,\006\005IQIA$\021)\t9Ga+\002\002\023\005%qW\013\005\005s\023y\f\006\003\003<\n\005\007#B\037\003L\tu\006cA\021\003@\02211E!.C\002\021Bq!\fB[\001\004\021\031\r\005\003\032\035\nu\006BCA=\005W\013\t\021\"!\003HV!!\021\032Bi)\021\021YMa5\021\013)\t\tI!4\021\teq%q\032\t\004C\tEGAB\022\003F\n\007A\005\003\006\002\016\n\025\027\021!a\001\005+\004R!\020B&\005\037D!\"a%\003,\006\005I\021BAK\r\031\021Y\016\001!\003^\ny\021\n^3sC\ndWm\026:baB,'/\006\003\003`\n\0258\003\003Bm\005C\0249\017U*\021\teq\"1\035\t\004C\t\025HAB\022\003Z\n\007A\005\005\003>)\t\r\bBC\027\003Z\nU\r\021\"\001\003lV\021!Q\036\t\005aE\022\031\017\003\006\\\0053\024\t\022)A\005\005[Dq!\030Bm\t\003\021\031\020\006\003\003v\n]\b#B\037\003Z\n\r\bbB\027\003r\002\007!Q\036\005\ne\ne\027\021!C\001\005w,BA!@\004\004Q!!q`B\003!\025i$\021\\B\001!\r\t31\001\003\007G\te(\031\001\023\t\0235\022I\020%AA\002\r\035\001\003\002\0312\007\003A\021b\037Bm#\003%\taa\003\026\t\r51\021C\013\003\007\037Q3A!<\000\t\031\0313\021\002b\001I!Q\021Q\003Bm\003\003%\t%a\006\t\025\005\005\"\021\\A\001\n\003\t\031\003\003\006\002(\te\027\021!C\001\0073!2\001KB\016\021%\tica\006\002\002\003\007a\007\003\006\0022\te\027\021!C!\003gA!\"!\017\003Z\006\005I\021AB\021)\r!71\005\005\n\003[\031y\"!AA\002!B\021\"!\021\003Z\006\005I\021I\033\t\025\005-#\021\\A\001\n\003\032I\003F\002e\007WA\021\"!\f\004(\005\005\t\031\001\025\b\023\r=\002!!A\t\002\rE\022aD%uKJ\f'\r\\3Xe\006\004\b/\032:\021\007u\032\031DB\005\003\\\002\t\t\021#\001\0046M!11G\005T\021\035i61\007C\001\007s!\"a!\r\t\025\005\02531GA\001\n\013\n9\005\003\006\002h\rM\022\021!CA\007)Ba!\021\004HQ!11IB%!\025i$\021\\B#!\r\t3q\t\003\007G\ru\"\031\001\023\t\0175\032i\0041\001\004LA!\001'MB#\021)\tIha\r\002\002\023\0055qJ\013\005\007#\032I\006\006\003\004T\rm\003#\002\006\002\002\016U\003\003\002\0312\007/\0022!IB-\t\031\0313Q\nb\001I!Q\021QRB'\003\003\005\ra!\030\021\013u\022Ina\026\t\025\005M51GA\001\n\023\t)J\002\004\004d\001\0015Q\r\002\021\025&#XM]1cY\026<&/\0319qKJ,Baa\032\004rMA1\021MB5\007g\0026\013E\0031\007W\032y'C\002\004n\021\021\001#\0212tiJ\f7\r^%uKJ\f'\r\\3\021\007\005\032\t\b\002\004$\007C\022\r\001\n\t\005aE\032y\007\003\006.\007C\022)\032!C\001\007o*\"a!\037\021\013\r\033Yha\034\n\005I\"\005BC.\004b\tE\t\025!\003\004z!9Ql!\031\005\002\r\005E\003BBB\007\013\003R!PB1\007_Bq!LB@\001\004\031I\bC\004;\007C\"\ta!#\026\005\r-\005\003\002\031Z\007_B\001ba$\004b\021\0051\021S\001\013]\026<()^5mI\026\024X\003BBJ\007G+\"a!&\021\r\r]5QTBQ\033\t\031IJC\002\004\034\022\tq!\\;uC\ndW-\003\003\004 \016e%aC!se\006L()\0364gKJ\0042!IBR\t\035\031)k!$C\002\021\022\021A\021\005\ne\016\005\024\021!C\001\007S+Baa+\0042R!1QVBZ!\025i4\021MBX!\r\t3\021\027\003\007G\r\035&\031\001\023\t\0235\0329\013%AA\002\rU\006#B\"\004|\r=\006\"C>\004bE\005I\021AB]+\021\031Yla0\026\005\ru&fAB=\02211ea.C\002\021B!\"!\006\004b\005\005I\021IA\f\021)\t\tc!\031\002\002\023\005\0211\005\005\013\003O\031\t'!A\005\002\r\035Gc\001\025\004J\"I\021QFBc\003\003\005\rA\016\005\013\003c\031\t'!A\005B\005M\002\"CA!\007C\n\t\021\"\0216\021)\tYe!\031\002\002\023\0053\021\033\013\004I\016M\007\"CA\027\007\037\f\t\0211\001)\017%\0319\016AA\001\022\003\031I.\001\tK\023R,'/\0312mK^\023\030\r\0359feB\031Qha7\007\023\r\r\004!!A\t\002\ru7\003BBn\023MCq!XBn\t\003\031\t\017\006\002\004Z\"Q\021QIBn\003\003%)%a\022\t\025\005\03541\\A\001\n\003\0339/\006\003\004j\016=H\003BBv\007c\004R!PB1\007[\0042!IBx\t\031\0313Q\035b\001I!9Qf!:A\002\rM\b#B\"\004|\r5\bBCA=\0077\f\t\021\"!\004xV!1\021 C\001)\021\031Y\020b\001\021\013)\t\ti!@\021\013\r\033Yha@\021\007\005\"\t\001\002\004$\007k\024\r\001\n\005\013\003\033\033)0!AA\002\021\025\001#B\037\004b\r}\bBCAJ\0077\f\t\021\"\003\002\026\0321A1\002\001A\t\033\021!CS\"pY2,7\r^5p]^\023\030\r\0359feV!Aq\002C\013'!!I\001\"\005\005\030A\033\006#\002\031\004l\021M\001cA\021\005\026\02111\005\"\003C\002\021\002B\001M\031\005\024!QQ\006\"\003\003\026\004%\t\001b\007\026\005\021u\001#B\r\005 \021M\021b\001C\0215\tQ1i\0347mK\016$\030n\0348\t\025m#IA!E!\002\023!i\002C\004^\t\023!\t\001b\n\025\t\021%B1\006\t\006{\021%A1\003\005\b[\021\025\002\031\001C\017\021\035QD\021\002C\001\t_)\"\001\"\r\021\tAJF1\003\005\bi\021%A\021IA\022\021!\t\031\006\"\003\005B\005u\007\002CBH\t\023!\t\001\"\017\026\t\021mB\021I\013\003\t{\001baa&\004\036\022}\002cA\021\005B\02191Q\025C\034\005\004!\003\"\003:\005\n\005\005I\021\001C#+\021!9\005\"\024\025\t\021%Cq\n\t\006{\021%A1\n\t\004C\0215CAB\022\005D\t\007A\005C\005.\t\007\002\n\0211\001\005RA)\021\004b\b\005L!I1\020\"\003\022\002\023\005AQK\013\005\t/\"Y&\006\002\005Z)\032AQD@\005\r\r\"\031F1\001%\021)\t)\002\"\003\002\002\023\005\023q\003\005\013\003C!I!!A\005\002\005\r\002BCA\024\t\023\t\t\021\"\001\005dQ\031\001\006\"\032\t\023\0055B\021MA\001\002\0041\004BCA\031\t\023\t\t\021\"\021\0024!I\021\021\tC\005\003\003%\t%\016\005\013\003\027\"I!!A\005B\0215Dc\0013\005p!I\021Q\006C6\003\003\005\r\001K\004\n\tg\002\021\021!E\001\tk\n!CS\"pY2,7\r^5p]^\023\030\r\0359feB\031Q\bb\036\007\023\021-\001!!A\t\002\021e4\003\002C<\023MCq!\030C<\t\003!i\b\006\002\005v!Q\021Q\tC<\003\003%)%a\022\t\025\005\035DqOA\001\n\003#\031)\006\003\005\006\022-E\003\002CD\t\033\003R!\020C\005\t\023\0032!\tCF\t\031\031C\021\021b\001I!9Q\006\"!A\002\021=\005#B\r\005 \021%\005BCA=\to\n\t\021\"!\005\024V!AQ\023CO)\021!9\nb(\021\013)\t\t\t\"'\021\013e!y\002b'\021\007\005\"i\n\002\004$\t#\023\r\001\n\005\013\003\033#\t*!AA\002\021\005\006#B\037\005\n\021m\005BCAJ\to\n\t\021\"\003\002\026\0321Aq\025\001A\tS\023!bU3r/J\f\007\017]3s+\021!Y\013\".\024\021\021\025FQ\026C\\!N\003R!\007CX\tgK1\001\"-\033\0051\t%m\035;sC\016$H*[:u!\r\tCQ\027\003\007G\021\025&\031\001\023\021\tu\"B1\027\005\013[\021\025&Q3A\005\002\021mVC\001C_!\025\001Dq\030CZ\023\r!\t\r\002\002\004'\026\f\bBC.\005&\nE\t\025!\003\005>\"9Q\f\"*\005\002\021\035G\003\002Ce\t\027\004R!\020CS\tgCq!\fCc\001\004!i\f\003\005\005P\022\025F\021\001Ci\003\r9W\r\036\013\005\tg#\031\016C\004\005V\0225\007\031\001\034\002\003%D\021B\035CS\003\003%\t\001\"7\026\t\021mG\021\035\013\005\t;$\031\017E\003>\tK#y\016E\002\"\tC$aa\tCl\005\004!\003\"C\027\005XB\005\t\031\001Cs!\025\001Dq\030Cp\021%YHQUI\001\n\003!I/\006\003\005l\022=XC\001CwU\r!il \003\007G\021\035(\031\001\023\t\025\005UAQUA\001\n\003\n9\002\003\006\002\"\021\025\026\021!C\001\003GA!\"a\n\005&\006\005I\021\001C|)\rAC\021 \005\n\003[!)0!AA\002YB!\"!\r\005&\006\005I\021IA\032\021)\tI\004\"*\002\002\023\005Aq \013\004I\026\005\001\"CA\027\t{\f\t\0211\001)\017%))\001AA\001\022\003)9!\001\006TKF<&/\0319qKJ\0042!PC\005\r%!9\013AA\001\022\003)Ya\005\003\006\n%\031\006bB/\006\n\021\005Qq\002\013\003\013\017A!\"!\022\006\n\005\005IQIA$\021)\t9'\"\003\002\002\023\005UQC\013\005\013/)i\002\006\003\006\032\025}\001#B\037\005&\026m\001cA\021\006\036\02111%b\005C\002\021Bq!LC\n\001\004)\t\003E\0031\t+Y\002\003\006\002z\025%\021\021!CA\013K)B!b\n\0060Q!Q\021FC\031!\025Q\021\021QC\026!\025\001DqXC\027!\r\tSq\006\003\007G\025\r\"\031\001\023\t\025\0055U1EA\001\002\004)\031\004E\003>\tK+i\003\003\006\002\024\026%\021\021!C\005\003+3a!\"\017\001\001\026m\"!E'vi\006\024G.Z*fc^\023\030\r\0359feV!QQHC\"'!)9$b\020\006FA\033\006#B\r\0050\026\005\003cA\021\006D\02111%b\016C\002\021\002B!\020\013\006B!QQ&b\016\003\026\004%\t!\"\023\026\005\025-\003CBBL\013\033*\t%\003\003\005B\016e\005BC.\0068\tE\t\025!\003\006L!9Q,b\016\005\002\025MC\003BC+\013/\002R!PC\034\013\003Bq!LC)\001\004)Y\005\003\005\005P\026]B\021AC.)\021)\t%\"\030\t\017\021UW\021\fa\001m!AQ\021MC\034\t\003*\031'A\002tKR$b!\"\021\006f\025\035\004b\002Ck\013?\002\rA\016\005\t\013S*y\0061\001\006B\005!Q\r\\3n\021%\021XqGA\001\n\003)i'\006\003\006p\025UD\003BC9\013o\002R!PC\034\013g\0022!IC;\t\031\031S1\016b\001I!IQ&b\033\021\002\003\007Q\021\020\t\007\007/+i%b\035\t\023m,9$%A\005\002\025uT\003BC@\013\007+\"!\"!+\007\025-s\020\002\004$\013w\022\r\001\n\005\013\003+)9$!A\005B\005]\001BCA\021\013o\t\t\021\"\001\002$!Q\021qEC\034\003\003%\t!b#\025\007!*i\tC\005\002.\025%\025\021!a\001m!Q\021\021GC\034\003\003%\t%a\r\t\025\005eRqGA\001\n\003)\031\nF\002e\013+C\021\"!\f\006\022\006\005\t\031\001\025\b\023\025e\005!!A\t\002\025m\025!E'vi\006\024G.Z*fc^\023\030\r\0359feB\031Q(\"(\007\023\025e\002!!A\t\002\025}5\003BCO\023MCq!XCO\t\003)\031\013\006\002\006\034\"Q\021QICO\003\003%)%a\022\t\025\005\035TQTA\001\n\003+I+\006\003\006,\026EF\003BCW\013g\003R!PC\034\013_\0032!ICY\t\031\031Sq\025b\001I!9Q&b*A\002\025U\006CBBL\013\033*y\013\003\006\002z\025u\025\021!CA\013s+B!b/\006DR!QQXCc!\025Q\021\021QC`!\031\0319*\"\024\006BB\031\021%b1\005\r\r*9L1\001%\021)\ti)b.\002\002\003\007Qq\031\t\006{\025]R\021\031\005\013\003'+i*!A\005\n\005UeABCg\001\001+yM\001\013NkR\f'\r\\3Ck\0324WM],sCB\004XM]\013\005\013#,9n\005\005\006L\026MW\021\034)T!\025IBqVCk!\r\tSq\033\003\007G\025-'\031\001\023\021\tu\"RQ\033\005\013[\025-'Q3A\005\002\025uWCACp!\031\0319*\"9\006V&!Q1]BM\005\031\021UO\0324fe\"Q1,b3\003\022\003\006I!b8\t\017u+Y\r\"\001\006jR!Q1^Cw!\025iT1ZCk\021\035iSq\035a\001\013?D\001\002b4\006L\022\005Q\021\037\013\005\013+,\031\020C\004\005V\026=\b\031\001\034\t\021\025\005T1\032C!\013o$b!\"6\006z\026m\bb\002Ck\013k\004\rA\016\005\t\013S*)\0201\001\006V\"AQq`Cf\t\0032\t!A\002bI\022$2\001\032D\002\021!)I'\"@A\002\025U\007bB8\006L\022\005cq\001\013\005\013+4I\001C\004\005V\032\025\001\031\001\034\t\023I,Y-!A\005\002\0315Q\003\002D\b\r+!BA\"\005\007\030A)Q(b3\007\024A\031\021E\"\006\005\r\r2YA1\001%\021%ic1\002I\001\002\0041I\002\005\004\004\030\026\005h1\003\005\nw\026-\027\023!C\001\r;)BAb\b\007$U\021a\021\005\026\004\013?|HAB\022\007\034\t\007A\005\003\006\002\026\025-\027\021!C!\003/A!\"!\t\006L\006\005I\021AA\022\021)\t9#b3\002\002\023\005a1\006\013\004Q\0315\002\"CA\027\rS\t\t\0211\0017\021)\t\t$b3\002\002\023\005\0231\007\005\013\003s)Y-!A\005\002\031MBc\0013\0076!I\021Q\006D\031\003\003\005\r\001K\004\n\rs\001\021\021!E\001\rw\tA#T;uC\ndWMQ;gM\026\024xK]1qa\026\024\bcA\037\007>\031IQQ\032\001\002\002#\005aqH\n\005\r{I1\013C\004^\r{!\tAb\021\025\005\031m\002BCA#\r{\t\t\021\"\022\002H!Q\021q\rD\037\003\003%\tI\"\023\026\t\031-c\021\013\013\005\r\0332\031\006E\003>\013\0274y\005E\002\"\r#\"aa\tD$\005\004!\003bB\027\007H\001\007aQ\013\t\007\007/+\tOb\024\t\025\005edQHA\001\n\0033I&\006\003\007\\\031\rD\003\002D/\rK\002RACAA\r?\002baa&\006b\032\005\004cA\021\007d\02111Eb\026C\002\021B!\"!$\007X\005\005\t\031\001D4!\025iT1\032D1\021)\t\031J\"\020\002\002\023%\021Q\023\004\007\r[\002\001Ib\034\003\031)c\025n\035;Xe\006\004\b/\032:\026\t\031Ed1P\n\t\rW2\031H\" Q'B11q\023D;\rsJAAb\036\004\032\nq\021IY:ue\006\034GOQ;gM\026\024\bcA\021\007|\02111Eb\033C\002\021\002baa&\006b\032e\004BC\027\007l\tU\r\021\"\001\007\002V\021a1\021\t\0063\031\025e\021P\005\004\r\017S\"\001\002'jgRD!b\027D6\005#\005\013\021\002DB\021\035if1\016C\001\r\033#BAb$\007\022B)QHb\033\007z!9QFb#A\002\031\r\005\002\003DK\rW\"\t!a\t\002\r1,gn\032;i\021!\t\031Fb\033\005B\005u\007b\002\036\007l\021\005c1T\013\003\r;\003B\001M-\007z!A\021q\rD6\t\0031\t\013\006\003\007z\031\r\006b\002Ck\r?\003\rA\016\005\t\rO3Y\007\"\001\007*\0061Q\017\0353bi\026$R!\005DV\r[Cq\001\"6\007&\002\007a\007\003\005\006j\031\025\006\031\001D=\021!1\tLb\033\005\002\031M\026A\004\023qYV\034H%Z9%G>dwN\034\013\005\rk39,\004\002\007l!AQ\021\016DX\001\0041I\b\003\005\007<\032-D\021\001D_\003!!\003\017\\;tI\025\fH\003\002D[\rC\001\"\"\033\007:\002\007a\021\020\005\t\r\0074Y\007\"\001\007F\006I\021N\\:feR\fE\016\034\013\006#\031\035g\021\032\005\b\t+4\t\r1\0017\021!1YM\"1A\002\0315\027!B3mK6\034\b#\002\031\007P\032e\024b\001Di\t\tYAK]1wKJ\034\030M\0317f\021\035yg1\016C\001\r+$BA\"\037\007X\"9AQ\033Dj\001\0041\004b\002Dn\rW\"\t\001E\001\006G2,\027M\035\005\t\r?4Y\007\"\001\007b\0061!/Z:vYR,\"Ab$\t\021\031\025h1\016C!\rO\fQa\0317p]\026$\"Ab$\t\023I4Y'!A\005\002\031-X\003\002Dw\rg$BAb<\007vB)QHb\033\007rB\031\021Eb=\005\r\r2IO1\001%\021%ic\021\036I\001\002\00419\020E\003\032\r\0133\t\020C\005|\rW\n\n\021\"\001\007|V!aQ`D\001+\t1yPK\002\007\004~$aa\tD}\005\004!\003BCA\013\rW\n\t\021\"\021\002\030!Q\021\021\005D6\003\003%\t!a\t\t\025\005\035b1NA\001\n\0039I\001F\002)\017\027A\021\"!\f\b\b\005\005\t\031\001\034\t\025\005Eb1NA\001\n\003\n\031dB\005\b\022\001\t\t\021#\001\b\024\005a!\nT5ti^\023\030\r\0359feB\031Qh\"\006\007\023\0315\004!!A\t\002\035]1\003BD\013\023MCq!XD\013\t\0039Y\002\006\002\b\024!Q\021QID\013\003\003%)%a\022\t\025\005\035tQCA\001\n\003;\t#\006\003\b$\035%B\003BD\023\017W\001R!\020D6\017O\0012!ID\025\t\031\031sq\004b\001I!9Qfb\bA\002\0355\002#B\r\007\006\036\035\002BCA=\017+\t\t\021\"!\b2U!q1GD\036)\0219)d\"\020\021\013)\t\tib\016\021\013e1)i\"\017\021\007\005:Y\004\002\004$\017_\021\r\001\n\005\013\003\033;y#!AA\002\035}\002#B\037\007l\035e\002BCAJ\017+\t\t\021\"\003\002\026\0321qQ\t\001\001\017\017\022!bU3u/J\f\007\017]3s+\0219Ieb\025\024\t\035\rs1\n\t\0063\0355s\021K\005\004\017\037R\"aC!cgR\024\030m\031;TKR\0042!ID*\t\031\031s1\tb\001I!QQfb\021\003\002\003\006Iab\026\021\013A:If\"\025\n\007\035mCAA\002TKRDq!XD\"\t\0039y\006\006\003\bb\035\r\004#B\037\bD\035E\003bB\027\b^\001\007qq\013\005\007i\035\rC\021A\033\t\017i:\031\005\"\001\bjQ\021q1\016\n\006\017[\022u\021\017\004\b\017_:9\007AD6\0051a$/\0324j]\026lWM\034;?!\021I\022j\"\025\007\r\035U\004\001QD<\005EiU\017^1cY\026\034V\r^,sCB\004XM]\013\005\017s:yh\005\004\bt\035m\004k\025\t\006{\035\rsQ\020\t\004C\035}DAB\022\bt\t\007A\005\003\006.\017g\022)\032!C\001\017\007+\"a\"\"\021\r\r]uqQD?\023\0219Yf!'\t\025m;\031H!E!\002\0239)\tC\004^\017g\"\ta\"$\025\t\035=u\021\023\t\006{\035MtQ\020\005\b[\035-\005\031ADC\021!)ypb\035\005B\035UEc\0013\b\030\"AQ\021NDJ\001\0049i\bC\004p\017g\"\teb'\025\007\021<i\nC\004\006j\035e\005\031A\005\t\017\031mw1\017C!!!I!ob\035\002\002\023\005q1U\013\005\017K;Y\013\006\003\b(\0365\006#B\037\bt\035%\006cA\021\b,\02211e\")C\002\021B\021\"LDQ!\003\005\rab,\021\r\r]uqQDU\021%Yx1OI\001\n\0039\031,\006\003\b6\036eVCAD\\U\r9)i \003\007G\035E&\031\001\023\t\025\005Uq1OA\001\n\003\n9\002\003\006\002\"\035M\024\021!C\001\003GA!\"a\n\bt\005\005I\021ADa)\rAs1\031\005\n\003[9y,!AA\002YB!\"!\r\bt\005\005I\021IA\032\021)\tIdb\035\002\002\023\005q\021\032\013\004I\036-\007\"CA\027\017\017\f\t\0211\001)\017%9y\rAA\001\022\0039\t.A\tNkR\f'\r\\3TKR<&/\0319qKJ\0042!PDj\r%9)\bAA\001\022\0039)n\005\003\bT&\031\006bB/\bT\022\005q\021\034\013\003\017#D!\"!\022\bT\006\005IQIA$\021)\t9gb5\002\002\023\005uq\\\013\005\017C<9\017\006\003\bd\036%\b#B\037\bt\035\025\bcA\021\bh\02211e\"8C\002\021Bq!LDo\001\0049Y\017\005\004\004\030\036\035uQ\035\005\013\003s:\031.!A\005\002\036=X\003BDy\017s$Bab=\b|B)!\"!!\bvB11qSDD\017o\0042!ID}\t\031\031sQ\036b\001I!Q\021QRDw\003\003\005\ra\"@\021\013u:\031hb>\t\025\005Mu1[A\001\n\023\t)J\002\004\t\004\001\001\005R\001\002\f\025N+Go\026:baB,'/\006\003\t\b!=1C\003E\001\021\023A\t\002c\005Q'B11q\023E\006\021\033IAab\024\004\032B\031\021\005c\004\005\r\rB\tA1\001%!\031\0319jb\"\t\016AA1q\023E\013\021\033AI\"\003\003\t\030\re%aB*fi2K7.\032\t\006{!\005\001R\002\005\013[!\005!Q3A\005\002!uQC\001E\020!\025I\002\022\005E\007\023\r9YF\007\005\0137\"\005!\021#Q\001\n!}\001bB/\t\002\021\005\001r\005\013\005\0213AI\003C\004.\021K\001\r\001c\b\t\017QB\t\001\"\021\002$!9!\b#\001\005\002!=RC\001E\031!\021\001\024\f#\004\t\021!U\002\022\001C\001\021o\t\001bY8oi\006Lgn\035\013\004I\"e\002\002CC5\021g\001\r\001#\004\t\021\031m\006\022\001C\001\021{!B\001c\020\tB5\021\001\022\001\005\t\013SBY\0041\001\t\016!A\001R\tE\001\t\003A9%A\005%[&tWo\035\023fcR!\001r\bE%\021!)I\007c\021A\002!5\001\002CC\000\021\003!\t\005#\024\025\007\021Dy\005\003\005\006j!-\003\031\001E\007\021\035y\007\022\001C!\021'\"2\001\032E+\021!)I\007#\025A\002!5\001b\002Dn\021\003!\t\005\005\005\t\0217B\t\001\"\021\t^\005)Q-\0349usV\021\001\022\004\005\t\rKD\t\001\"\021\tbQ\021\001\022\004\005\ne\"\005\021\021!C\001\021K*B\001c\032\tnQ!\001\022\016E8!\025i\004\022\001E6!\r\t\003R\016\003\007G!\r$\031\001\023\t\0235B\031\007%AA\002!E\004#B\r\t\"!-\004\"C>\t\002E\005I\021\001E;+\021A9\bc\037\026\005!e$f\001E\020\02211\005c\035C\002\021B!\"!\006\t\002\005\005I\021IA\f\021)\t\t\003#\001\002\002\023\005\0211\005\005\013\003OA\t!!A\005\002!\rEc\001\025\t\006\"I\021Q\006EA\003\003\005\rA\016\005\013\003cA\t!!A\005B\005Mr!\003EF\001\005\005\t\022\001EG\003-Q5+\032;Xe\006\004\b/\032:\021\007uByIB\005\t\004\001\t\t\021#\001\t\022N!\001rR\005T\021\035i\006r\022C\001\021+#\"\001#$\t\025\005\025\003rRA\001\n\013\n9\005\003\006\002h!=\025\021!CA\0217+B\001#(\t$R!\001r\024ES!\025i\004\022\001EQ!\r\t\0032\025\003\007G!e%\031\001\023\t\0175BI\n1\001\t(B)\021\004#\t\t\"\"Q\021\021\020EH\003\003%\t\tc+\026\t!5\006R\027\013\005\021_C9\fE\003\013\003\003C\t\fE\003\032\021CA\031\fE\002\"\021k#aa\tEU\005\004!\003BCAG\021S\013\t\0211\001\t:B)Q\b#\001\t4\"Q\0211\023EH\003\003%I!!&\007\r!}\006\001\001Ea\005)i\025\r],sCB\004XM]\013\007\021\007Di\r#5\024\t!u\006R\031\t\b3!\035\0072\032Eh\023\rAIM\007\002\f\003\n\034HO]1di6\013\007\017E\002\"\021\033$aa\tE_\005\004!\003cA\021\tR\02291Q\025E_\005\004!\003BC\027\t>\n\005\t\025!\003\tVB9\001\007c6\tL\"=\027b\001Em\t\t\031Q*\0319\t\017uCi\f\"\001\t^R!\001r\034Eq!\035i\004R\030Ef\021\037Dq!\fEn\001\004A)\016\003\0045\021{#\t%\016\005\t\t\037Di\f\"\021\thR!\001r\032Eu\021\035AY\017#:A\002%\t1a[3z\021!Ay\017#0\005B!E\030\001C3oiJL8+\032;\025\005!M\b#B\r\t\"!U\b\003\003E|\023\007AY\rc4\017\t!e\br \b\005\021wDi0D\001\035\023\tYB$C\002\n\002i\t1!T1q\023\021I)!c\002\003\013\025sGO]=\013\007%\005!D\002\004\n\f\001\001\025R\002\002\022\033V$\030M\0317f\033\006\004xK]1qa\026\024XCBE\b\023+IIb\005\004\n\n%E\001k\025\t\b{!u\0262CE\f!\r\t\023R\003\003\007G%%!\031\001\023\021\007\005JI\002B\004\004&&%!\031\001\023\t\0255JIA!f\001\n\003Ii\"\006\002\n AA1qSE\021\023'I9\"\003\003\tZ\016e\005BC.\n\n\tE\t\025!\003\n !9Q,#\003\005\002%\035B\003BE\025\023W\001r!PE\005\023'I9\002C\004.\023K\001\r!c\b\t\021%=\022\022\002C!\023c\t1\001];u)\031I9\"c\r\n8!A\021RGE\027\001\004I\031\"A\001l\021!II$#\fA\002%]\021!\001<\t\017=LI\001\"\021\n>Q!\021rCE \021\035I)$c\017A\002%AqAb7\n\n\021\005\003\003C\005s\023\023\t\t\021\"\001\nFU1\021rIE'\023#\"B!#\023\nTA9Q(#\003\nL%=\003cA\021\nN\02111%c\021C\002\021\0022!IE)\t\035\031)+c\021C\002\021B\021\"LE\"!\003\005\r!#\026\021\021\r]\025\022EE&\023\037B\021b_E\005#\003%\t!#\027\026\r%m\023rLE1+\tIiFK\002\n }$aaIE,\005\004!CaBBS\023/\022\r\001\n\005\013\003+II!!A\005B\005]\001BCA\021\023\023\t\t\021\"\001\002$!Q\021qEE\005\003\003%\t!#\033\025\007!JY\007C\005\002.%\035\024\021!a\001m!Q\021\021GE\005\003\003%\t%a\r\t\025\005e\022\022BA\001\n\003I\t\bF\002e\023gB\021\"!\f\np\005\005\t\031\001\025\b\023%]\004!!A\t\002%e\024!E'vi\006\024G.Z'ba^\023\030\r\0359feB\031Q(c\037\007\023%-\001!!A\t\002%u4\003BE>\023MCq!XE>\t\003I\t\t\006\002\nz!Q\021QIE>\003\003%)%a\022\t\025\005\035\0242PA\001\n\003K9)\006\004\n\n&=\0252\023\013\005\023\027K)\nE\004>\023\023Ii)#%\021\007\005Jy\t\002\004$\023\013\023\r\001\n\t\004C%MEaBBS\023\013\023\r\001\n\005\b[%\025\005\031AEL!!\0319*#\t\n\016&E\005BCA=\023w\n\t\021\"!\n\034V1\021RTES\023S#B!c(\n,B)!\"!!\n\"BA1qSE\021\023GK9\013E\002\"\023K#aaIEM\005\004!\003cA\021\n*\02291QUEM\005\004!\003BCAG\0233\013\t\0211\001\n.B9Q(#\003\n$&\035\006BCAJ\023w\n\t\021\"\003\002\026\032I\0212\027\001\021\002\007\005\021R\027\002\020\0256\013\007o\026:baB,'\017T5lKVA\021rWE_\023\003LYmE\004\n2&II,c1\021\021\r]\025\022EE^\023\0032!IE_\t\031\031\023\022\027b\001IA\031\021%#1\005\017\r\025\026\022\027b\001IAQ1qSEc\023wKy,#3\n\t%\0357\021\024\002\b\033\006\004H*[6f!\r\t\0232\032\003\n\023\033L\t\f\"b\001\023\037\024AAU3qeF\031Q%#5\023\r%M\0272YE]\r\0319y\007\001\001\nR\"1a\"#-\005\002AAq!LEY\r\003II.\006\002\n\\B9\021$#8\n<&}\026b\001Em5!9A'#-\005B\005\r\002\002\003Ch\023c#\t!c9\025\t%\025\030r\035\t\006\025\005\005\025r\030\005\t\023kI\t\0171\001\n<\"Aa1XEY\t\003IY\017\006\003\nn&=XBAEY\021!I\t0#;A\002%M\030AA6w!\035Q\021R_E^\023K1!c>\007\005\031!V\017\0357fe!A\001RIEY\t\003IY\020\006\003\nn&u\b\002\003Ev\023s\004\r!c/\t\021%=\022\022\027C!\025\003!b!#:\013\004)\025\001\002CE\033\023\004\r!c/\t\021%e\022r a\001\023C\001Bb*\n2\022\005#\022\002\013\006#)-!R\002\005\t\023kQ9\0011\001\n<\"A\021\022\bF\004\001\004Iy\fC\004p\023c#\tE#\005\025\t%\025(2\003\005\t\023kQy\0011\001\n<\"9!(#-\005\002)]QC\001F\r!\021\001\024,c=\t\017\031m\027\022\027C!!!A\0012LEY\t\003Ry\"\006\002\nJ\0321!2\005\001A\025K\0211BS'ba^\023\030\r\0359feV1!r\005F\030\025g\031\002B#\t\013*)U\002k\025\t\t\007/SYC#\f\0132%!\001\022ZBM!\r\t#r\006\003\007G)\005\"\031\001\023\021\007\005R\031\004B\004\004&*\005\"\031\001\023\021\023uJ\tL#\f\0132)]\002cB\037\013\")5\"\022\007\005\013[)\005\"Q3A\005\002)mRC\001F\037!\035I\022R\034F\027\025cA!b\027F\021\005#\005\013\021\002F\037\021\035i&\022\005C\001\025\007\"BAc\016\013F!9QF#\021A\002)u\002\002\003E.\025C!\tE#\023\026\005)]\002\"\003:\013\"\005\005I\021\001F'+\031QyE#\026\013ZQ!!\022\013F.!\035i$\022\005F*\025/\0022!\tF+\t\031\031#2\nb\001IA\031\021E#\027\005\017\r\025&2\nb\001I!IQFc\023\021\002\003\007!R\f\t\b3%u'2\013F,\021%Y(\022EI\001\n\003Q\t'\006\004\013d)\035$\022N\013\003\025KR3A#\020\000\t\031\031#r\fb\001I\02191Q\025F0\005\004!\003BCA\013\025C\t\t\021\"\021\002\030!Q\021\021\005F\021\003\003%\t!a\t\t\025\005\035\"\022EA\001\n\003Q\t\bF\002)\025gB\021\"!\f\013p\005\005\t\031\001\034\t\025\005E\"\022EA\001\n\003\n\031dB\005\013z\001\t\t\021#\001\013|\005Y!*T1q/J\f\007\017]3s!\ri$R\020\004\n\025G\001\021\021!E\001\025\032BA# \n'\"9QL# \005\002)\rEC\001F>\021)\t)E# \002\002\023\025\023q\t\005\013\003ORi(!A\005\002*%UC\002FF\025#S)\n\006\003\013\016*]\005cB\037\013\")=%2\023\t\004C)EEAB\022\013\b\n\007A\005E\002\"\025+#qa!*\013\b\n\007A\005C\004.\025\017\003\rA#'\021\017eIiNc$\013\024\"Q\021\021\020F?\003\003%\tI#(\026\r)}%r\025FV)\021Q\tK#,\021\013)\t\tIc)\021\017eIiN#*\013*B\031\021Ec*\005\r\rRYJ1\001%!\r\t#2\026\003\b\007KSYJ1\001%\021)\tiIc'\002\002\003\007!r\026\t\b{)\005\"R\025FU\021)\t\031J# \002\002\023%\021Q\023\004\007\025k\003\001Ac.\003=\r{gnY;se\026tG/T1q\t\026\004(/Z2bi\026$wK]1qa\026\024XC\002F]\025S\031m\005\004\0134*m&R\031\t\b{%%!R\030Fa!\r\t#r\030\003\007G)M&\031\001\023\021\007\005R\031\rB\004\004&*M&\031\001\023\021\021)\035'R\032F_\025\003l!A#3\013\007)-'$\001\006d_:\034WO\035:f]RLAAc4\013J\ni1i\0348dkJ\024XM\034;NCBD!\"\fFZ\005\013\007I\021\tFj+\tQ)\016\005\005\004\030*]'R\030Fa\023\021Qym!'\t\031mS\031L!A!\002\023Q).c\007\t\017uS\031\f\"\001\013^R!!r\034Fq!\035i$2\027F_\025\003Dq!\fFn\001\004Q)\016\003\005\013f*MF\021\001Ft\003-\001X\017^%g\003\n\034XM\034;\025\r)\005'\022\036Fv\021!I)Dc9A\002)u\006\002CE\035\025G\004\rA#1\t\017=T\031\f\"\001\013pR)AM#=\013t\"9\021R\007Fw\001\004I\001bBE\035\025[\004\r!\003\005\t\025oT\031\f\"\001\013z\0069!/\0329mC\016,GC\002Fa\025wTi\020\003\005\n6)U\b\031\001F_\021!IID#>A\002)\005\007\002\003F|\025g#\ta#\001\025\017\021\\\031a#\002\f\n!A\021R\007F\000\001\004Qi\f\003\005\f\b)}\b\031\001Fa\003\031yG\016\032<bY\"A12\002F\000\001\004Q\t-\001\004oK^4\030\r\034\004\007\027\037\001\001a#\005\003)\r{gnY;se\026tG/T1q/J\f\007\017]3s+\031Y\031b#\007\f\036M11RBF\013\027?\001r!PE\005\027/YY\002E\002\"\0273!aaIF\007\005\004!\003cA\021\f\036\02191QUF\007\005\004!\003\003\003Fd\025\033\\9bc\007\t\0255ZiA!b\001\n\003Z\031#\006\002\f&AA1rEF\026\027/YY\"\004\002\f*)\031!2\032\003\n\t!e7\022\006\005\r7.5!\021!Q\001\n-\025\0222\004\005\b;.5A\021AF\031)\021Y\031d#\016\021\017uZiac\006\f\034!9Qfc\fA\002-\025\002\002\003Fs\027\033!\ta#\017\025\r-m12HF\037\021!I)dc\016A\002-]\001\002CE\035\027o\001\rac\007\t\017=\\i\001\"\001\fBQ)Amc\021\fF!9\021RGF \001\004I\001bBE\035\027\001\r!\003\005\t\025o\\i\001\"\001\fJQ112DF&\027\033B\001\"#\016\fH\001\0071r\003\005\t\023sY9\0051\001\f\034!A!r_F\007\t\003Y\t\006F\004e\027'Z)fc\026\t\021%U2r\na\001\027/A\001bc\002\fP\001\00712\004\005\t\027\027Yy\0051\001\f\034\031112\f\001A\027;\022qDS\"p]\016,(O]3oi6\013\007\017R3qe\026\034\027\r^3e/J\f\007\017]3s+\031Yyf#\032\fjMQ1\022LF1\027WZy\007U*\021\021\r]%2FF2\027O\0022!IF3\t\031\0313\022\fb\001IA\031\021e#\033\005\017\r\0256\022\fb\001IAIQ(#-\fd-\0354R\016\t\b{-e32MF4!!\0319Jc6\fd-\035\004BC\027\fZ\tU\r\021\"\001\ftU\0211R\017\t\t\025\017Timc\031\fh!Q1l#\027\003\022\003\006Ia#\036\t\017u[I\006\"\001\f|Q!1RNF?\021\035i3\022\020a\001\027kB\001\002b4\fZ\021\0053\022\021\013\005\027\007[)\tE\003\013\003\003[9\007\003\005\n6-}\004\031AF2\021!AYf#\027\005B-%UCAF7\021!Q)o#\027\005\002-5ECBFB\027\037[\t\n\003\005\n6--\005\031AF2\021!IIdc#A\002-\035\004bB8\fZ\021\0051R\023\013\006I.]5\022\024\005\t\023kY\031\n1\001\fd!A\021\022HFJ\001\004Y9\007\003\005\013x.eC\021AFO)\031Y\031ic(\f\"\"A\021RGFN\001\004Y\031\007\003\005\n:-m\005\031AF4\021!Q9p#\027\005\002-\025Fc\0023\f(.%6R\026\005\t\023kY\031\0131\001\fd!A12VFR\001\004Y9'\001\005pY\0224\030\r\\;f\021!Yykc)A\002-\035\024\001\0038foZ\fG.^3\t\023I\\I&!A\005\002-MVCBF[\027w[y\f\006\003\f8.\005\007cB\037\fZ-e6R\030\t\004C-mFAB\022\f2\n\007A\005E\002\"\027#qa!*\f2\n\007A\005C\005.\027c\003\n\0211\001\fDBA!r\031Fg\027s[i\fC\005|\0273\n\n\021\"\001\fHV11\022ZFg\027\037,\"ac3+\007-Ut\020\002\004$\027\013\024\r\001\n\003\b\007K[)M1\001%\021)\t)b#\027\002\002\023\005\023q\003\005\013\003CYI&!A\005\002\005\r\002BCA\024\0273\n\t\021\"\001\fXR\031\001f#7\t\023\00552R[A\001\002\0041\004BCA\031\0273\n\t\021\"\021\0024\035I1r\034\001\002\002#\0051\022]\001 \025\016{gnY;se\026tG/T1q\t\026\004(/Z2bi\026$wK]1qa\026\024\bcA\037\fd\032I12\f\001\002\002#\0051R]\n\005\027GL1\013C\004^\027G$\ta#;\025\005-\005\bBCA#\027G\f\t\021\"\022\002H!Q\021qMFr\003\003%\tic<\026\r-E8r_F~)\021Y\031p#@\021\017uZIf#>\fzB\031\021ec>\005\r\rZiO1\001%!\r\t32 \003\b\007K[iO1\001%\021\035i3R\036a\001\027\004\002Bc2\013N.U8\022 \005\013\003sZ\031/!A\005\0022\rQC\002G\003\031\033a\t\002\006\003\r\b1M\001#\002\006\002\0022%\001\003\003Fd\025\033dY\001d\004\021\007\005bi\001\002\004$\031\003\021\r\001\n\t\004C1EAaBBS\031\003\021\r\001\n\005\013\003\033c\t!!AA\0021U\001cB\037\fZ1-Ar\002\005\013\003'[\031/!A\005\n\005UeA\002G\016\001\001ciBA\013K\007>t7-\036:sK:$X*\0319Xe\006\004\b/\032:\026\r1}AR\005G\025')aI\002$\t\r,1=\002k\025\t\t\007/SY\003d\t\r(A\031\021\005$\n\005\r\rbIB1\001%!\r\tC\022\006\003\b\007KcIB1\001%!%i\024\022\027G\022\031Oai\003E\004>\0313a\031\003d\n\021\021-\03522\006G\022\031OA!\"\fG\r\005+\007I\021\001G\032+\ta)\004\005\005\013H*5G2\005G\024\021)YF\022\004B\tB\003%AR\007\005\b;2eA\021\001G\036)\021ai\003$\020\t\0175bI\0041\001\r6!AAq\032G\r\t\003b\t\005\006\003\rD1\025\003#\002\006\002\0022\035\002\002CE\033\031\001\r\001d\t\t\021!mC\022\004C!\031\023*\"\001$\f\t\021)\025H\022\004C\001\031\033\"b\001d\021\rP1E\003\002CE\033\031\027\002\r\001d\t\t\021%eB2\na\001\031OAqa\034G\r\t\003a)\006F\003e\031/bI\006\003\005\n61M\003\031\001G\022\021!II\004d\025A\0021\035\002\002\003F|\0313!\t\001$\030\025\r1\rCr\fG1\021!I)\004d\027A\0021\r\002\002CE\035\0317\002\r\001d\n\t\021)]H\022\004C\001\031K\"r\001\032G4\031SbY\007\003\005\n61\r\004\031\001G\022\021!YY\013d\031A\0021\035\002\002CFX\031G\002\r\001d\n\t\023IdI\"!A\005\0021=TC\002G9\031obY\b\006\003\rt1u\004cB\037\r\0321UD\022\020\t\004C1]DAB\022\rn\t\007A\005E\002\"\031w\"qa!*\rn\t\007A\005C\005.\031[\002\n\0211\001\r\000AA!r\031Fg\031kbI\bC\005|\0313\t\n\021\"\001\r\004V1AR\021GE\031\027+\"\001d\"+\0071Ur\020\002\004$\031\003\023\r\001\n\003\b\007Kc\tI1\001%\021)\t)\002$\007\002\002\023\005\023q\003\005\013\003CaI\"!A\005\002\005\r\002BCA\024\0313\t\t\021\"\001\r\024R\031\001\006$&\t\023\0055B\022SA\001\002\0041\004BCA\031\0313\t\t\021\"\021\0024\035IA2\024\001\002\002#\005ART\001\026\025\016{gnY;se\026tG/T1q/J\f\007\017]3s!\riDr\024\004\n\0317\001\021\021!E\001\031C\033B\001d(\n'\"9Q\fd(\005\0021\025FC\001GO\021)\t)\005d(\002\002\023\025\023q\t\005\013\003Oby*!A\005\0022-VC\002GW\031gc9\f\006\003\r02e\006cB\037\r\0321EFR\027\t\004C1MFAB\022\r*\n\007A\005E\002\"\031o#qa!*\r*\n\007A\005C\004.\031S\003\r\001d/\021\021)\035'R\032GY\031kC!\"!\037\r \006\005I\021\021G`+\031a\t\r$3\rNR!A2\031Gh!\025Q\021\021\021Gc!!Q9M#4\rH2-\007cA\021\rJ\02211\005$0C\002\021\0022!\tGg\t\035\031)\013$0C\002\021B!\"!$\r>\006\005\t\031\001Gi!\035iD\022\004Gd\031\027D!\"a%\r \006\005I\021BAK\r\031a9\016\001!\rZ\n\tB)[2uS>t\027M]=Xe\006\004\b/\032:\026\r1mGR\035Gu'\031a)\016$8Q'B9\021\004d8\rd2\035\030b\001Gq5\tQA)[2uS>t\027M]=\021\007\005b)\017\002\004$\031+\024\r\001\n\t\004C1%HaBBS\031+\024\r\001\n\005\013[1U'Q3A\005\00215XC\001Gx!!\0319*#\t\rd2\035\bBC.\rV\nE\t\025!\003\rp\"9Q\f$6\005\0021UH\003\002G|\031s\004r!\020Gk\031Gd9\017C\004.\031g\004\r\001d<\t\rQb)\016\"\0016\021\035\t\031\006$6\005\002\rD\001\"$\001\rV\022\005Q2A\001\005W\026L8\017\006\002\016\006A!\021D\024Gr\021!iI\001$6\005\0025-\021\001C3mK6,g\016^:\025\00555\001\003B\rO\031OD\001\002b4\rV\022\005Q\022\003\013\005\031Ol\031\002C\004\tl6=\001\031A\005\t\021%=BR\033C\001\033/!b\001d:\016\0325m\001\002\003Ev\033+\001\r\001d9\t\0215uQR\003a\001\031O\fQA^1mk\026Dqa\034Gk\t\003j\t\003\006\003\rh6\r\002b\002Ev\033?\001\r!\003\005\ne2U\027\021!C\001\033O)b!$\013\01605MB\003BG\026\033k\001r!\020Gk\033[i\t\004E\002\"\033_!aaIG\023\005\004!\003cA\021\0164\02191QUG\023\005\004!\003\"C\027\016&A\005\t\031AG\034!!\0319*#\t\016.5E\002\"C>\rVF\005I\021AG\036+\031ii$$\021\016DU\021Qr\b\026\004\031_|HAB\022\016:\t\007A\005B\004\004&6e\"\031\001\023\t\025\005UAR[A\001\n\003\n9\002\003\006\002\"1U\027\021!C\001\003GA!\"a\n\rV\006\005I\021AG&)\rASR\n\005\n\003[iI%!AA\002YB!\"!\r\rV\006\005I\021IA\032\021)\tI\004$6\002\002\023\005Q2\013\013\004I6U\003\"CA\027\033#\n\t\0211\001)\021%\t\t\005$6\002\002\023\005S\007\003\006\002F1U\027\021!C!\003\017B!\"a\023\rV\006\005I\021IG/)\r!Wr\f\005\n\003[iY&!AA\002!:\021\"d\031\001\003\003E\t!$\032\002#\021K7\r^5p]\006\024\030p\026:baB,'\017E\002>\033O2\021\002d6\001\003\003E\t!$\033\024\t5\035\024b\025\005\b;6\035D\021AG7)\ti)\007\003\006\002F5\035\024\021!C#\003\017B!\"a\032\016h\005\005I\021QG:+\031i)(d\037\016\000Q!QrOGA!\035iDR[G=\033{\0022!IG>\t\031\031S\022\017b\001IA\031\021%d \005\017\r\025V\022\017b\001I!9Q&$\035A\0025\r\005\003CBL\023CiI($ \t\025\005eTrMA\001\n\003k9)\006\004\016\n6EUR\023\013\005\033\027k9\nE\003\013\003\003ki\t\005\005\004\030&\005RrRGJ!\r\tS\022\023\003\007G5\025%\031\001\023\021\007\005j)\nB\004\004&6\025%\031\001\023\t\025\0055URQA\001\002\004iI\nE\004>\031+ly)d%\t\025\005MUrMA\001\n\023\t)J\002\004\016 \002\001U\022\025\002\023\025\022K7\r^5p]\006\024\030p\026:baB,'/\006\004\016$6%VRV\n\t\033;k)+d,Q'BA1q\023F\026\033OkY\013E\002\"\033S#aaIGO\005\004!\003cA\021\016.\02291QUGO\005\004!\003\003CBL\023Ci9+d+\t\0255jiJ!f\001\n\003i\031,\006\002\0166B9\021\004d8\016(6-\006BC.\016\036\nE\t\025!\003\0166\"9Q,$(\005\0025mF\003BG_\033\003r!PGO\033OkY\013C\004.\033s\003\r!$.\t\017Qji\n\"\021\002$!AAqZGO\t\003i)\r\006\003\016H6%\007#\002\006\002\0026-\006\002CE\033\033\007\004\r!d*\t\021\031mVR\024C\001\033\033$B!d4\016R6\021QR\024\005\t\023clY\r1\001\016TB9!\"#>\016(6-\006\002\003E#\033;#\t!d6\025\t5=W\022\034\005\t\021Wl)\0161\001\016(\"A\021rFGO\t\003ji\016\006\004\016H6}W\022\035\005\t\023kiY\0161\001\016(\"A\021\022HGn\001\004iY\013\003\005\007(6uE\021IGs)\025\tRr]Gu\021!I)$d9A\0025\035\006\002CE\035\033G\004\r!d+\t\017=li\n\"\021\016nR!QrYGx\021!I)$d;A\0025\035\006b\002\036\016\036\022\005Q2_\013\003\033k\004B\001M-\016T\"9a1\\GO\t\003\002\002\"\003:\016\036\006\005I\021AG~+\031iiPd\001\017\bQ!Qr H\005!\035iTR\024H\001\035\013\0012!\tH\002\t\031\031S\022 b\001IA\031\021Ed\002\005\017\r\025V\022 b\001I!IQ&$?\021\002\003\007a2\002\t\b31}g\022\001H\003\021%YXRTI\001\n\003qy!\006\004\017\0229UarC\013\003\035'Q3!$.\000\t\031\031cR\002b\001I\02191Q\025H\007\005\004!\003BCA\013\033;\013\t\021\"\021\002\030!Q\021\021EGO\003\003%\t!a\t\t\025\005\035RRTA\001\n\003qy\002F\002)\035CA\021\"!\f\017\036\005\005\t\031\001\034\t\025\005ERRTA\001\n\003\n\031dB\005\017(\001\t\t\021#\001\017*\005\021\"\nR5di&|g.\031:z/J\f\007\017]3s!\rid2\006\004\n\033?\003\021\021!E\001\035[\031BAd\013\n'\"9QLd\013\005\0029EBC\001H\025\021)\t)Ed\013\002\002\023\025\023q\t\005\013\003OrY#!A\005\002:]RC\002H\035\035q\031\005\006\003\017<9\025\003cB\037\016\036:ub\022\t\t\004C9}BAB\022\0176\t\007A\005E\002\"\035\007\"qa!*\0176\t\007A\005C\004.\035k\001\rAd\022\021\017eayN$\020\017B!Q\021\021\020H\026\003\003%\tId\023\026\r95cR\013H-)\021qyEd\027\021\013)\t\tI$\025\021\017eayNd\025\017XA\031\021E$\026\005\r\rrIE1\001%!\r\tc\022\f\003\b\007KsIE1\001%\021)\tiI$\023\002\002\003\007aR\f\t\b{5ue2\013H,\021)\t\031Jd\013\002\002\023%\021Q\023\004\007\035G\002\001I$\032\003%)\003&o\0349feRLWm],sCB\004XM]\n\013\035Cr9G$\036\017xA\033\006\003CBL\025WqIG$\033\021\t9-d\022\017\b\004\02595\024b\001H8\r\0051\001K]3eK\032LA!!\b\017t)\031ar\016\004\021\021\r]\025\022\005H5\035S\002\"ba&\nF:%d\022\016H=!\rid\022\r\005\013[9\005$Q3A\005\0029uTC\001H@!\rIb\022Q\005\004\035\007S\"A\003)s_B,'\017^5fg\"Q1L$\031\003\022\003\006IAd \t\017us\t\007\"\001\017\nR!a\022\020HF\021\035icr\021a\001\035Bq\001\016H1\t\003\n\031\003\003\005\005P:\005D\021\001HI)\021q\031J$&\021\013)\t\tI$\033\t\021%Ubr\022a\001\035SB\001Bb/\017b\021\005a\022\024\013\005\0357si*\004\002\017b!A\021\022\037HL\001\004qy\nE\004\013\023ktIG$\033\t\021!\025c\022\rC\001\035G#BAd'\017&\"A\0012\036HQ\001\004qI\007\003\005\n09\005D\021\tHU)\031q\031Jd+\017.\"A\021R\007HT\001\004qI\007\003\005\n:9\035\006\031\001H5\021!19K$\031\005B9EF#B\t\0174:U\006\002CE\033\035_\003\rA$\033\t\021%ebr\026a\001\035SBqa\034H1\t\003rI\f\006\003\017\024:m\006\002CE\033\035o\003\rA$\033\t\017ir\t\007\"\001\017@V\021a\022\031\t\005aesy\nC\004\007\\:\005D\021\t\t\t\021!mc\022\rC!\035\017,\"A$\037\t\0219-g\022\rC\001\035\033\f1bZ3u!J|\007/\032:usR!\021\021\004Hh\021!AYO$3A\0029%\004\002\003Hf\035C\"\tAd5\025\r\005eaR\033Hl\021!AYO$5A\0029%\004\002\003Hm\035#\004\rA$\033\002\031\021,g-Y;miZ\013G.^3\t\0219ug\022\rC\001\035?\f1b]3u!J|\007/\032:usR)!I$9\017d\"A\0012\036Hn\001\004qI\007\003\005\016\0369m\007\031\001H5\021%\021h\022MA\001\n\003q9\017\006\003\017z9%\b\"C\027\017fB\005\t\031\001H@\021%Yh\022MI\001\n\003qi/\006\002\017p*\032arP@\t\025\005Ua\022MA\001\n\003\n9\002\003\006\002\"9\005\024\021!C\001\003GA!\"a\n\017b\005\005I\021\001H|)\rAc\022 \005\n\003[q)0!AA\002YB!\"!\r\017b\005\005I\021IA\032\017%qy\020AA\001\022\003y\t!\001\nK!J|\007/\032:uS\026\034xK]1qa\026\024\bcA\037\020\004\031Ia2\r\001\002\002#\005qRA\n\006\037\007y9a\025\t\t\037\023yyAd \017z5\021q2\002\006\004\037\0331\021a\002:v]RLW.Z\005\005\037#yYAA\tBEN$(/Y2u\rVt7\r^5p]FBq!XH\002\t\003y)\002\006\002\020\002!Q\021QIH\002\003\003%)%a\022\t\025\005\035t2AA\001\n\003{Y\002\006\003\017z=u\001bB\027\020\032\001\007ar\020\005\013\003sz\031!!A\005\002>\005B\003BH\022\037K\001RACAA\035B!\"!$\020 \005\005\t\031\001H=\021)\t\031jd\001\002\002\023%\021QS\004\b\037W\021\001\022AH\027\003!9&/\0319qKJ\034\b\003BH\030\037ci\021A\001\004\007\003\tA\tad\r\024\r=E\022b$\016T!\ryy\003\001\005\b;>EB\021AH\035)\tyi\003\003\006\002\024>E\022\021!C\005\003+Cca$\r\020@=\025\003c\001\006\020B%\031q2\t\004\003!M+'/[1m-\026\0248/[8o+&#e\004\003X5h+e#\034pA)\r=%rrHH#\001")
/*     */ public interface Wrappers {
/*     */   IteratorWrapper$ IteratorWrapper();
/*     */   
/*     */   JIteratorWrapper$ JIteratorWrapper();
/*     */   
/*     */   JEnumerationWrapper$ JEnumerationWrapper();
/*     */   
/*     */   IterableWrapper$ IterableWrapper();
/*     */   
/*     */   JIterableWrapper$ JIterableWrapper();
/*     */   
/*     */   JCollectionWrapper$ JCollectionWrapper();
/*     */   
/*     */   SeqWrapper$ SeqWrapper();
/*     */   
/*     */   MutableSeqWrapper$ MutableSeqWrapper();
/*     */   
/*     */   MutableBufferWrapper$ MutableBufferWrapper();
/*     */   
/*     */   JListWrapper$ JListWrapper();
/*     */   
/*     */   MutableSetWrapper$ MutableSetWrapper();
/*     */   
/*     */   JSetWrapper$ JSetWrapper();
/*     */   
/*     */   MutableMapWrapper$ MutableMapWrapper();
/*     */   
/*     */   JMapWrapper$ JMapWrapper();
/*     */   
/*     */   JConcurrentMapDeprecatedWrapper$ JConcurrentMapDeprecatedWrapper();
/*     */   
/*     */   JConcurrentMapWrapper$ JConcurrentMapWrapper();
/*     */   
/*     */   DictionaryWrapper$ DictionaryWrapper();
/*     */   
/*     */   JDictionaryWrapper$ JDictionaryWrapper();
/*     */   
/*     */   JPropertiesWrapper$ JPropertiesWrapper();
/*     */   
/*     */   public abstract class IterableWrapperTrait$class {
/*     */     public static void $init$(Wrappers.IterableWrapperTrait $this) {}
/*     */     
/*     */     public static int size(Wrappers.IterableWrapperTrait<A> $this) {
/*  23 */       return $this.underlying().size();
/*     */     }
/*     */     
/*     */     public static Wrappers.IteratorWrapper iterator(Wrappers.IterableWrapperTrait<A> $this) {
/*  24 */       return new Wrappers.IteratorWrapper($this.scala$collection$convert$Wrappers$IterableWrapperTrait$$$outer(), $this.underlying().iterator());
/*     */     }
/*     */     
/*     */     public static boolean isEmpty(Wrappers.IterableWrapperTrait<A> $this) {
/*  25 */       return $this.underlying().isEmpty();
/*     */     }
/*     */   }
/*     */   
/*     */   public class IteratorWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  28 */       return "IteratorWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.IteratorWrapper<A> apply(Iterator<A> underlying) {
/*  28 */       return new Wrappers.IteratorWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Iterator<A>> unapply(Wrappers.IteratorWrapper x$0) {
/*  28 */       return (x$0 == null) ? (Option<Iterator<A>>)scala.None$.MODULE$ : (Option<Iterator<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  28 */       return this.$outer.IteratorWrapper();
/*     */     }
/*     */     
/*     */     public IteratorWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class IteratorWrapper<A> implements Iterator<A>, Enumeration<A>, Product, Serializable {
/*     */     private final Iterator<A> underlying;
/*     */     
/*     */     public Iterator<A> underlying() {
/*  28 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> IteratorWrapper<A> copy(Iterator<A> underlying) {
/*  28 */       return new IteratorWrapper(scala$collection$convert$Wrappers$IteratorWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Iterator<A> copy$default$1() {
/*  28 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  28 */       return "IteratorWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  28 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  28 */       switch (x$1) {
/*     */         default:
/*  28 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  28 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  28 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  28 */       return x$1 instanceof IteratorWrapper;
/*     */     }
/*     */     
/*     */     public int hashCode() {
/*  28 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public String toString() {
/*  28 */       return scala.runtime.ScalaRunTime$.MODULE$._toString(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$IteratorWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$IteratorWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$IteratorWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$IteratorWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$IteratorWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Lscala/collection/Iterator;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Lscala/collection/Iterator;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #28	-> 0
/*     */       //   #236	-> 26
/*     */       //   #28	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$IteratorWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public IteratorWrapper(Wrappers $outer, Iterator<A> underlying) {
/*  28 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public boolean hasNext() {
/*  29 */       return underlying().hasNext();
/*     */     }
/*     */     
/*     */     public A next() {
/*  30 */       return (A)underlying().next();
/*     */     }
/*     */     
/*     */     public boolean hasMoreElements() {
/*  31 */       return underlying().hasNext();
/*     */     }
/*     */     
/*     */     public A nextElement() {
/*  32 */       return (A)underlying().next();
/*     */     }
/*     */     
/*     */     public scala.runtime.Nothing$ remove() {
/*  33 */       throw new UnsupportedOperationException();
/*     */     }
/*     */   }
/*     */   
/*     */   public class ToIteratorWrapper<A> {
/*     */     private final Iterator<A> underlying;
/*     */     
/*     */     public ToIteratorWrapper(Wrappers $outer, Iterator<A> underlying) {}
/*     */     
/*     */     public Wrappers.IteratorWrapper<A> asJava() {
/*  37 */       return new Wrappers.IteratorWrapper<A>(scala$collection$convert$Wrappers$ToIteratorWrapper$$$outer(), this.underlying);
/*     */     }
/*     */   }
/*     */   
/*     */   public class JIteratorWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  40 */       return "JIteratorWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.JIteratorWrapper<A> apply(Iterator<A> underlying) {
/*  40 */       return new Wrappers.JIteratorWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Iterator<A>> unapply(Wrappers.JIteratorWrapper x$0) {
/*  40 */       return (x$0 == null) ? (Option<Iterator<A>>)scala.None$.MODULE$ : (Option<Iterator<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  40 */       return this.$outer.JIteratorWrapper();
/*     */     }
/*     */     
/*     */     public JIteratorWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JIteratorWrapper<A> extends AbstractIterator<A> implements Iterator<A>, Product, Serializable {
/*     */     private final Iterator<A> underlying;
/*     */     
/*     */     public Iterator<A> underlying() {
/*  40 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> JIteratorWrapper<A> copy(Iterator<A> underlying) {
/*  40 */       return new JIteratorWrapper(scala$collection$convert$Wrappers$JIteratorWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Iterator<A> copy$default$1() {
/*  40 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  40 */       return "JIteratorWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  40 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  40 */       switch (x$1) {
/*     */         default:
/*  40 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  40 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  40 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  40 */       return x$1 instanceof JIteratorWrapper;
/*     */     }
/*     */     
/*     */     public int hashCode() {
/*  40 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$JIteratorWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$JIteratorWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$JIteratorWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$JIteratorWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$JIteratorWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Ljava/util/Iterator;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Ljava/util/Iterator;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #40	-> 0
/*     */       //   #236	-> 26
/*     */       //   #40	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$JIteratorWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public JIteratorWrapper(Wrappers $outer, Iterator<A> underlying) {
/*  40 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public boolean hasNext() {
/*  41 */       return underlying().hasNext();
/*     */     }
/*     */     
/*     */     public A next() {
/*  42 */       return underlying().next();
/*     */     }
/*     */   }
/*     */   
/*     */   public class JEnumerationWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  45 */       return "JEnumerationWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.JEnumerationWrapper<A> apply(Enumeration<A> underlying) {
/*  45 */       return new Wrappers.JEnumerationWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Enumeration<A>> unapply(Wrappers.JEnumerationWrapper x$0) {
/*  45 */       return (x$0 == null) ? (Option<Enumeration<A>>)scala.None$.MODULE$ : (Option<Enumeration<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  45 */       return this.$outer.JEnumerationWrapper();
/*     */     }
/*     */     
/*     */     public JEnumerationWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JEnumerationWrapper<A> extends AbstractIterator<A> implements Iterator<A>, Product, Serializable {
/*     */     private final Enumeration<A> underlying;
/*     */     
/*     */     public Enumeration<A> underlying() {
/*  45 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> JEnumerationWrapper<A> copy(Enumeration<A> underlying) {
/*  45 */       return new JEnumerationWrapper(scala$collection$convert$Wrappers$JEnumerationWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Enumeration<A> copy$default$1() {
/*  45 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  45 */       return "JEnumerationWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  45 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  45 */       switch (x$1) {
/*     */         default:
/*  45 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  45 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  45 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  45 */       return x$1 instanceof JEnumerationWrapper;
/*     */     }
/*     */     
/*     */     public int hashCode() {
/*  45 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$JEnumerationWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$JEnumerationWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$JEnumerationWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$JEnumerationWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$JEnumerationWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Ljava/util/Enumeration;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Ljava/util/Enumeration;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #45	-> 0
/*     */       //   #236	-> 26
/*     */       //   #45	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$JEnumerationWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public JEnumerationWrapper(Wrappers $outer, Enumeration<A> underlying) {
/*  45 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public boolean hasNext() {
/*  46 */       return underlying().hasMoreElements();
/*     */     }
/*     */     
/*     */     public A next() {
/*  47 */       return underlying().nextElement();
/*     */     }
/*     */   }
/*     */   
/*     */   public class IterableWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  50 */       return "IterableWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.IterableWrapper<A> apply(Iterable<A> underlying) {
/*  50 */       return new Wrappers.IterableWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Iterable<A>> unapply(Wrappers.IterableWrapper x$0) {
/*  50 */       return (x$0 == null) ? (Option<Iterable<A>>)scala.None$.MODULE$ : (Option<Iterable<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  50 */       return this.$outer.IterableWrapper();
/*     */     }
/*     */     
/*     */     public IterableWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class IterableWrapper<A> extends AbstractCollection<A> implements IterableWrapperTrait<A>, Product, Serializable {
/*     */     private final Iterable<A> underlying;
/*     */     
/*     */     public int size() {
/*  50 */       return Wrappers.IterableWrapperTrait$class.size(this);
/*     */     }
/*     */     
/*     */     public Wrappers.IteratorWrapper<A> iterator() {
/*  50 */       return Wrappers.IterableWrapperTrait$class.iterator(this);
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/*  50 */       return Wrappers.IterableWrapperTrait$class.isEmpty(this);
/*     */     }
/*     */     
/*     */     public Iterable<A> underlying() {
/*  50 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> IterableWrapper<A> copy(Iterable<A> underlying) {
/*  50 */       return new IterableWrapper(scala$collection$convert$Wrappers$IterableWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Iterable<A> copy$default$1() {
/*  50 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  50 */       return "IterableWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  50 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  50 */       switch (x$1) {
/*     */         default:
/*  50 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  50 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  50 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  50 */       return x$1 instanceof IterableWrapper;
/*     */     }
/*     */     
/*     */     public int hashCode() {
/*  50 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$IterableWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$IterableWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$IterableWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$IterableWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$IterableWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Lscala/collection/Iterable;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Lscala/collection/Iterable;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #50	-> 0
/*     */       //   #236	-> 26
/*     */       //   #50	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$IterableWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public IterableWrapper(Wrappers $outer, Iterable<A> underlying) {
/*  50 */       Wrappers.IterableWrapperTrait$class.$init$(this);
/*  50 */       Product.class.$init$(this);
/*     */     }
/*     */   }
/*     */   
/*     */   public class JIterableWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  52 */       return "JIterableWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.JIterableWrapper<A> apply(Iterable<A> underlying) {
/*  52 */       return new Wrappers.JIterableWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Iterable<A>> unapply(Wrappers.JIterableWrapper x$0) {
/*  52 */       return (x$0 == null) ? (Option<Iterable<A>>)scala.None$.MODULE$ : (Option<Iterable<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  52 */       return this.$outer.JIterableWrapper();
/*     */     }
/*     */     
/*     */     public JIterableWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JIterableWrapper<A> extends AbstractIterable<A> implements Iterable<A>, Product, Serializable {
/*     */     private final Iterable<A> underlying;
/*     */     
/*     */     public Iterable<A> underlying() {
/*  52 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> JIterableWrapper<A> copy(Iterable<A> underlying) {
/*  52 */       return new JIterableWrapper(scala$collection$convert$Wrappers$JIterableWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Iterable<A> copy$default$1() {
/*  52 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  52 */       return "JIterableWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  52 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  52 */       switch (x$1) {
/*     */         default:
/*  52 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  52 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  52 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public int hashCode() {
/*  52 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$JIterableWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$JIterableWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$JIterableWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$JIterableWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$JIterableWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Ljava/lang/Iterable;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Ljava/lang/Iterable;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #52	-> 0
/*     */       //   #236	-> 26
/*     */       //   #52	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$JIterableWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public JIterableWrapper(Wrappers $outer, Iterable<A> underlying) {
/*  52 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public Iterator<A> iterator() {
/*  53 */       return WrapAsScala$.MODULE$.asScalaIterator(underlying().iterator());
/*     */     }
/*     */     
/*     */     public <B> ArrayBuffer<B> newBuilder() {
/*  54 */       return new ArrayBuffer();
/*     */     }
/*     */   }
/*     */   
/*     */   public class JCollectionWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  57 */       return "JCollectionWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.JCollectionWrapper<A> apply(Collection<A> underlying) {
/*  57 */       return new Wrappers.JCollectionWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Collection<A>> unapply(Wrappers.JCollectionWrapper x$0) {
/*  57 */       return (x$0 == null) ? (Option<Collection<A>>)scala.None$.MODULE$ : (Option<Collection<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  57 */       return this.$outer.JCollectionWrapper();
/*     */     }
/*     */     
/*     */     public JCollectionWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JCollectionWrapper<A> extends AbstractIterable<A> implements Iterable<A>, Product, Serializable {
/*     */     private final Collection<A> underlying;
/*     */     
/*     */     public Collection<A> underlying() {
/*  57 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> JCollectionWrapper<A> copy(Collection<A> underlying) {
/*  57 */       return new JCollectionWrapper(scala$collection$convert$Wrappers$JCollectionWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Collection<A> copy$default$1() {
/*  57 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  57 */       return "JCollectionWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  57 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  57 */       switch (x$1) {
/*     */         default:
/*  57 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  57 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  57 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public int hashCode() {
/*  57 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$JCollectionWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$JCollectionWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$JCollectionWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$JCollectionWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$JCollectionWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Ljava/util/Collection;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Ljava/util/Collection;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #57	-> 0
/*     */       //   #236	-> 26
/*     */       //   #57	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$JCollectionWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public JCollectionWrapper(Wrappers $outer, Collection<A> underlying) {
/*  57 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public Iterator<A> iterator() {
/*  58 */       return WrapAsScala$.MODULE$.asScalaIterator(underlying().iterator());
/*     */     }
/*     */     
/*     */     public int size() {
/*  59 */       return underlying().size();
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/*  60 */       return underlying().isEmpty();
/*     */     }
/*     */     
/*     */     public <B> ArrayBuffer<B> newBuilder() {
/*  61 */       return new ArrayBuffer();
/*     */     }
/*     */   }
/*     */   
/*     */   public class SeqWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  64 */       return "SeqWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.SeqWrapper<A> apply(Seq<A> underlying) {
/*  64 */       return new Wrappers.SeqWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Seq<A>> unapply(Wrappers.SeqWrapper x$0) {
/*  64 */       return (x$0 == null) ? (Option<Seq<A>>)scala.None$.MODULE$ : (Option<Seq<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  64 */       return this.$outer.SeqWrapper();
/*     */     }
/*     */     
/*     */     public SeqWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class SeqWrapper<A> extends AbstractList<A> implements IterableWrapperTrait<A>, Product, Serializable {
/*     */     private final Seq<A> underlying;
/*     */     
/*     */     public int size() {
/*  64 */       return Wrappers.IterableWrapperTrait$class.size(this);
/*     */     }
/*     */     
/*     */     public Wrappers.IteratorWrapper<A> iterator() {
/*  64 */       return Wrappers.IterableWrapperTrait$class.iterator(this);
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/*  64 */       return Wrappers.IterableWrapperTrait$class.isEmpty(this);
/*     */     }
/*     */     
/*     */     public Seq<A> underlying() {
/*  64 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> SeqWrapper<A> copy(Seq<A> underlying) {
/*  64 */       return new SeqWrapper(scala$collection$convert$Wrappers$SeqWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Seq<A> copy$default$1() {
/*  64 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  64 */       return "SeqWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  64 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  64 */       switch (x$1) {
/*     */         default:
/*  64 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  64 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  64 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  64 */       return x$1 instanceof SeqWrapper;
/*     */     }
/*     */     
/*     */     public SeqWrapper(Wrappers $outer, Seq<A> underlying) {
/*  64 */       Wrappers.IterableWrapperTrait$class.$init$(this);
/*  64 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public A get(int i) {
/*  65 */       return (A)underlying().apply(i);
/*     */     }
/*     */   }
/*     */   
/*     */   public class MutableSeqWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  68 */       return "MutableSeqWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.MutableSeqWrapper<A> apply(Seq<A> underlying) {
/*  68 */       return new Wrappers.MutableSeqWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Seq<A>> unapply(Wrappers.MutableSeqWrapper x$0) {
/*  68 */       return (x$0 == null) ? (Option<Seq<A>>)scala.None$.MODULE$ : (Option<Seq<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  68 */       return this.$outer.MutableSeqWrapper();
/*     */     }
/*     */     
/*     */     public MutableSeqWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class MutableSeqWrapper<A> extends AbstractList<A> implements IterableWrapperTrait<A>, Product, Serializable {
/*     */     private final Seq<A> underlying;
/*     */     
/*     */     public int size() {
/*  68 */       return Wrappers.IterableWrapperTrait$class.size(this);
/*     */     }
/*     */     
/*     */     public Wrappers.IteratorWrapper<A> iterator() {
/*  68 */       return Wrappers.IterableWrapperTrait$class.iterator(this);
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/*  68 */       return Wrappers.IterableWrapperTrait$class.isEmpty(this);
/*     */     }
/*     */     
/*     */     public Seq<A> underlying() {
/*  68 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> MutableSeqWrapper<A> copy(Seq<A> underlying) {
/*  68 */       return new MutableSeqWrapper(scala$collection$convert$Wrappers$MutableSeqWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Seq<A> copy$default$1() {
/*  68 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  68 */       return "MutableSeqWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  68 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  68 */       switch (x$1) {
/*     */         default:
/*  68 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  68 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  68 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  68 */       return x$1 instanceof MutableSeqWrapper;
/*     */     }
/*     */     
/*     */     public MutableSeqWrapper(Wrappers $outer, Seq<A> underlying) {
/*  68 */       Wrappers.IterableWrapperTrait$class.$init$(this);
/*  68 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public A get(int i) {
/*  69 */       return (A)underlying().apply(i);
/*     */     }
/*     */     
/*     */     public A set(int i, Object elem) {
/*  71 */       Object p = underlying().apply(i);
/*  72 */       underlying().update(i, elem);
/*  73 */       return (A)p;
/*     */     }
/*     */   }
/*     */   
/*     */   public class MutableBufferWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  77 */       return "MutableBufferWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.MutableBufferWrapper<A> apply(Buffer<A> underlying) {
/*  77 */       return new Wrappers.MutableBufferWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Buffer<A>> unapply(Wrappers.MutableBufferWrapper x$0) {
/*  77 */       return (x$0 == null) ? (Option<Buffer<A>>)scala.None$.MODULE$ : (Option<Buffer<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  77 */       return this.$outer.MutableBufferWrapper();
/*     */     }
/*     */     
/*     */     public MutableBufferWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class MutableBufferWrapper<A> extends AbstractList<A> implements IterableWrapperTrait<A>, Product, Serializable {
/*     */     private final Buffer<A> underlying;
/*     */     
/*     */     public int size() {
/*  77 */       return Wrappers.IterableWrapperTrait$class.size(this);
/*     */     }
/*     */     
/*     */     public Wrappers.IteratorWrapper<A> iterator() {
/*  77 */       return Wrappers.IterableWrapperTrait$class.iterator(this);
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/*  77 */       return Wrappers.IterableWrapperTrait$class.isEmpty(this);
/*     */     }
/*     */     
/*     */     public Buffer<A> underlying() {
/*  77 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> MutableBufferWrapper<A> copy(Buffer<A> underlying) {
/*  77 */       return new MutableBufferWrapper(scala$collection$convert$Wrappers$MutableBufferWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Buffer<A> copy$default$1() {
/*  77 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*  77 */       return "MutableBufferWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*  77 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*  77 */       switch (x$1) {
/*     */         default:
/*  77 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*  77 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*  77 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/*  77 */       return x$1 instanceof MutableBufferWrapper;
/*     */     }
/*     */     
/*     */     public MutableBufferWrapper(Wrappers $outer, Buffer<A> underlying) {
/*  77 */       Wrappers.IterableWrapperTrait$class.$init$(this);
/*  77 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public A get(int i) {
/*  78 */       return (A)underlying().apply(i);
/*     */     }
/*     */     
/*     */     public A set(int i, Object elem) {
/*  79 */       Object p = underlying().apply(i);
/*  79 */       underlying().update(i, elem);
/*  79 */       return (A)p;
/*     */     }
/*     */     
/*     */     public boolean add(Object elem) {
/*  80 */       underlying().append((Seq)scala.Predef$.MODULE$.genericWrapArray(new Object[] { elem }));
/*  80 */       return true;
/*     */     }
/*     */     
/*     */     public A remove(int i) {
/*  81 */       return (A)underlying().remove(i);
/*     */     }
/*     */   }
/*     */   
/*     */   public class JListWrapper$ implements Serializable {
/*     */     public final String toString() {
/*  84 */       return "JListWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.JListWrapper<A> apply(List<A> underlying) {
/*  84 */       return new Wrappers.JListWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<List<A>> unapply(Wrappers.JListWrapper x$0) {
/*  84 */       return (x$0 == null) ? (Option<List<A>>)scala.None$.MODULE$ : (Option<List<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/*  84 */       return this.$outer.JListWrapper();
/*     */     }
/*     */     
/*     */     public JListWrapper$(Wrappers $outer) {}
/*     */     
/*     */     public class Wrappers$JListWrapper$$anonfun$insertAll$1 extends AbstractFunction1<A, Object> implements Serializable {
/*     */       public static final long serialVersionUID = 0L;
/*     */       
/*     */       private final List ins$1;
/*     */       
/*     */       public final boolean apply(Object x$1) {
/*  94 */         return this.ins$1.add(x$1);
/*     */       }
/*     */       
/*     */       public Wrappers$JListWrapper$$anonfun$insertAll$1(Wrappers.JListWrapper $outer, List ins$1) {}
/*     */     }
/*     */   }
/*     */   
/*     */   public class JListWrapper<A> extends AbstractBuffer<A> implements Buffer<A>, Product, Serializable {
/*     */     private final List<A> underlying;
/*     */     
/*     */     public List<A> underlying() {
/*     */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> JListWrapper<A> copy(List<A> underlying) {
/*     */       return new JListWrapper(scala$collection$convert$Wrappers$JListWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> List<A> copy$default$1() {
/*     */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*     */       return "JListWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*     */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*     */       switch (x$1) {
/*     */         default:
/*     */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*     */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*     */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JListWrapper(Wrappers $outer, List<A> underlying) {
/*     */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public int length() {
/*     */       return underlying().size();
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/*     */       return underlying().isEmpty();
/*     */     }
/*     */     
/*     */     public Iterator<A> iterator() {
/*     */       return WrapAsScala$.MODULE$.asScalaIterator(underlying().iterator());
/*     */     }
/*     */     
/*     */     public A apply(int i) {
/*     */       return underlying().get(i);
/*     */     }
/*     */     
/*     */     public void update(int i, Object elem) {
/*     */       underlying().set(i, (A)elem);
/*     */     }
/*     */     
/*     */     public JListWrapper<A> $plus$eq$colon(Object elem) {
/*     */       underlying().subList(0, 0).add(elem);
/*     */       return this;
/*     */     }
/*     */     
/*     */     public JListWrapper<A> $plus$eq(Object elem) {
/*     */       underlying().add((A)elem);
/*     */       return this;
/*     */     }
/*     */     
/*     */     public void insertAll(int i, Traversable elems) {
/*     */       List<A> ins = underlying().subList(0, i);
/*  94 */       elems.seq().foreach((Function1)new Wrappers$JListWrapper$$anonfun$insertAll$1(this, (JListWrapper<A>)ins));
/*     */     }
/*     */     
/*     */     public class Wrappers$JListWrapper$$anonfun$insertAll$1 extends AbstractFunction1<A, Object> implements Serializable {
/*     */       public static final long serialVersionUID = 0L;
/*     */       
/*     */       private final List ins$1;
/*     */       
/*     */       public final boolean apply(Object x$1) {
/*  94 */         return this.ins$1.add(x$1);
/*     */       }
/*     */       
/*     */       public Wrappers$JListWrapper$$anonfun$insertAll$1(Wrappers.JListWrapper $outer, List ins$1) {}
/*     */     }
/*     */     
/*     */     public A remove(int i) {
/*  96 */       return underlying().remove(i);
/*     */     }
/*     */     
/*     */     public void clear() {
/*  97 */       underlying().clear();
/*     */     }
/*     */     
/*     */     public JListWrapper<A> result() {
/*  98 */       return this;
/*     */     }
/*     */     
/*     */     public JListWrapper<A> clone() {
/* 101 */       return new JListWrapper(scala$collection$convert$Wrappers$JListWrapper$$$outer(), new ArrayList<A>(underlying()));
/*     */     }
/*     */   }
/*     */   
/*     */   public class SetWrapper<A> extends AbstractSet<A> {
/*     */     public final Set<A> scala$collection$convert$Wrappers$SetWrapper$$underlying;
/*     */     
/*     */     public SetWrapper(Wrappers $outer, Set<A> underlying) {}
/*     */     
/*     */     public int size() {
/* 106 */       return this.scala$collection$convert$Wrappers$SetWrapper$$underlying.size();
/*     */     }
/*     */     
/*     */     public Object iterator() {
/* 107 */       return new Wrappers$SetWrapper$$anon$4(this);
/*     */     }
/*     */     
/*     */     public class Wrappers$SetWrapper$$anon$4 implements Iterator<A> {
/*     */       private final Iterator<A> ui;
/*     */       
/*     */       private Option<A> prev;
/*     */       
/*     */       public Wrappers$SetWrapper$$anon$4(Wrappers.SetWrapper $outer) {
/* 108 */         this.ui = $outer.scala$collection$convert$Wrappers$SetWrapper$$underlying.iterator();
/* 109 */         this.prev = (Option<A>)scala.None$.MODULE$;
/*     */       }
/*     */       
/*     */       private Iterator<A> ui() {
/*     */         return this.ui;
/*     */       }
/*     */       
/*     */       private Option<A> prev() {
/* 109 */         return this.prev;
/*     */       }
/*     */       
/*     */       private void prev_$eq(Option<A> x$1) {
/* 109 */         this.prev = x$1;
/*     */       }
/*     */       
/*     */       public boolean hasNext() {
/* 110 */         return ui().hasNext();
/*     */       }
/*     */       
/*     */       public A next() {
/* 111 */         Object e = ui().next();
/* 111 */         prev_$eq((Option<A>)new Some(e));
/* 111 */         return (A)e;
/*     */       }
/*     */       
/*     */       public void remove() {
/* 112 */         Option<A> option = prev();
/* 113 */         if (option instanceof Some) {
/* 113 */           Some some = (Some)option;
/* 114 */           Set set = this.$outer.scala$collection$convert$Wrappers$SetWrapper$$underlying;
/* 115 */           if (set instanceof Set) {
/* 115 */             Set set1 = (Set)set;
/* 116 */             set1.remove(some.x());
/* 117 */             prev_$eq((Option<A>)scala.None$.MODULE$);
/*     */           } 
/* 119 */           throw new UnsupportedOperationException("remove");
/*     */         } 
/* 122 */         throw new IllegalStateException("next must be called at least once before remove");
/*     */       }
/*     */     }
/*     */   }
/*     */   
/*     */   public class MutableSetWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 127 */       return "MutableSetWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.MutableSetWrapper<A> apply(Set<A> underlying) {
/* 127 */       return new Wrappers.MutableSetWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Set<A>> unapply(Wrappers.MutableSetWrapper x$0) {
/* 127 */       return (x$0 == null) ? (Option<Set<A>>)scala.None$.MODULE$ : (Option<Set<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 127 */       return this.$outer.MutableSetWrapper();
/*     */     }
/*     */     
/*     */     public MutableSetWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class MutableSetWrapper<A> extends SetWrapper<A> implements Product, Serializable {
/*     */     private final Set<A> underlying;
/*     */     
/*     */     public Set<A> underlying() {
/* 127 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> MutableSetWrapper<A> copy(Set<A> underlying) {
/* 127 */       return new MutableSetWrapper(scala$collection$convert$Wrappers$MutableSetWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Set<A> copy$default$1() {
/* 127 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 127 */       return "MutableSetWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 127 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 127 */       switch (x$1) {
/*     */         default:
/* 127 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 127 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 127 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/* 127 */       return x$1 instanceof MutableSetWrapper;
/*     */     }
/*     */     
/*     */     public MutableSetWrapper(Wrappers $outer, Set<A> underlying) {
/* 127 */       super($outer, (Set<A>)underlying);
/* 127 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public boolean add(Object elem) {
/* 129 */       int sz = underlying().size();
/* 130 */       underlying().$plus$eq(elem);
/* 131 */       return (sz < underlying().size());
/*     */     }
/*     */     
/*     */     public boolean remove(Object elem) {
/*     */       try {
/*     */       
/* 134 */       } catch (ClassCastException classCastException) {}
/* 134 */       return false;
/*     */     }
/*     */     
/*     */     public void clear() {
/* 136 */       underlying().clear();
/*     */     }
/*     */   }
/*     */   
/*     */   public class JSetWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 139 */       return "JSetWrapper";
/*     */     }
/*     */     
/*     */     public <A> Wrappers.JSetWrapper<A> apply(Set<A> underlying) {
/* 139 */       return new Wrappers.JSetWrapper<A>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A> Option<Set<A>> unapply(Wrappers.JSetWrapper x$0) {
/* 139 */       return (x$0 == null) ? (Option<Set<A>>)scala.None$.MODULE$ : (Option<Set<A>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 139 */       return this.$outer.JSetWrapper();
/*     */     }
/*     */     
/*     */     public JSetWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JSetWrapper<A> extends AbstractSet<A> implements Set<A>, SetLike<A, JSetWrapper<A>>, Product, Serializable {
/*     */     private final Set<A> underlying;
/*     */     
/*     */     public Set<A> underlying() {
/* 139 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A> JSetWrapper<A> copy(Set<A> underlying) {
/* 139 */       return new JSetWrapper(scala$collection$convert$Wrappers$JSetWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A> Set<A> copy$default$1() {
/* 139 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 139 */       return "JSetWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 139 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 139 */       switch (x$1) {
/*     */         default:
/* 139 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 139 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 139 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JSetWrapper(Wrappers $outer, Set<A> underlying) {
/* 139 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public int size() {
/* 141 */       return underlying().size();
/*     */     }
/*     */     
/*     */     public Iterator<A> iterator() {
/* 143 */       return WrapAsScala$.MODULE$.asScalaIterator(underlying().iterator());
/*     */     }
/*     */     
/*     */     public boolean contains(Object elem) {
/* 145 */       return underlying().contains(elem);
/*     */     }
/*     */     
/*     */     public JSetWrapper<A> $plus$eq(Object elem) {
/* 147 */       underlying().add((A)elem);
/* 147 */       return this;
/*     */     }
/*     */     
/*     */     public JSetWrapper<A> $minus$eq(Object elem) {
/* 148 */       underlying().remove(elem);
/* 148 */       return this;
/*     */     }
/*     */     
/*     */     public boolean add(Object elem) {
/* 150 */       return underlying().add((A)elem);
/*     */     }
/*     */     
/*     */     public boolean remove(Object elem) {
/* 151 */       return underlying().remove(elem);
/*     */     }
/*     */     
/*     */     public void clear() {
/* 152 */       underlying().clear();
/*     */     }
/*     */     
/*     */     public JSetWrapper<A> empty() {
/* 154 */       return new JSetWrapper(scala$collection$convert$Wrappers$JSetWrapper$$$outer(), new HashSet<A>());
/*     */     }
/*     */     
/*     */     public JSetWrapper<A> clone() {
/* 158 */       return new JSetWrapper(scala$collection$convert$Wrappers$JSetWrapper$$$outer(), new LinkedHashSet<A>(underlying()));
/*     */     }
/*     */   }
/*     */   
/*     */   public class MapWrapper<A, B> extends AbstractMap<A, B> {
/*     */     public final Map<A, B> scala$collection$convert$Wrappers$MapWrapper$$underlying;
/*     */     
/*     */     public MapWrapper(Wrappers $outer, Map<A, B> underlying) {}
/*     */     
/*     */     public int size() {
/* 162 */       return this.scala$collection$convert$Wrappers$MapWrapper$$underlying.size();
/*     */     }
/*     */     
/*     */     public B get(Object key) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: getfield scala$collection$convert$Wrappers$MapWrapper$$underlying : Lscala/collection/Map;
/*     */       //   4: aload_1
/*     */       //   5: invokeinterface get : (Ljava/lang/Object;)Lscala/Option;
/*     */       //   10: astore #4
/*     */       //   12: getstatic scala/None$.MODULE$ : Lscala/None$;
/*     */       //   15: dup
/*     */       //   16: ifnonnull -> 28
/*     */       //   19: pop
/*     */       //   20: aload #4
/*     */       //   22: ifnull -> 36
/*     */       //   25: goto -> 41
/*     */       //   28: aload #4
/*     */       //   30: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   33: ifeq -> 41
/*     */       //   36: aconst_null
/*     */       //   37: astore_3
/*     */       //   38: goto -> 60
/*     */       //   41: aload #4
/*     */       //   43: instanceof scala/Some
/*     */       //   46: ifeq -> 64
/*     */       //   49: aload #4
/*     */       //   51: checkcast scala/Some
/*     */       //   54: astore_2
/*     */       //   55: aload_2
/*     */       //   56: invokevirtual x : ()Ljava/lang/Object;
/*     */       //   59: astore_3
/*     */       //   60: aload_3
/*     */       //   61: goto -> 76
/*     */       //   64: new scala/MatchError
/*     */       //   67: dup
/*     */       //   68: aload #4
/*     */       //   70: invokespecial <init> : (Ljava/lang/Object;)V
/*     */       //   73: athrow
/*     */       //   74: pop
/*     */       //   75: aconst_null
/*     */       //   76: areturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #165	-> 0
/*     */       //   #166	-> 12
/*     */       //   #167	-> 41
/*     */       //   #165	-> 55
/*     */       //   #167	-> 56
/*     */       //   #165	-> 60
/*     */       //   #164	-> 74
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	77	0	this	Lscala/collection/convert/Wrappers$MapWrapper;
/*     */       //   0	77	1	key	Ljava/lang/Object;
/*     */       // Exception table:
/*     */       //   from	to	target	type
/*     */       //   0	74	74	java/lang/ClassCastException
/*     */     }
/*     */     
/*     */     public Set<Map.Entry<A, B>> entrySet() {
/* 173 */       return new Wrappers$MapWrapper$$anon$1(this);
/*     */     }
/*     */     
/*     */     public class Wrappers$MapWrapper$$anon$1 extends AbstractSet<Map.Entry<A, B>> {
/*     */       public Wrappers$MapWrapper$$anon$1(Wrappers.MapWrapper $outer) {}
/*     */       
/*     */       public int size() {
/* 174 */         return this.$outer.size();
/*     */       }
/*     */       
/*     */       public Object iterator() {
/* 176 */         return new Wrappers$MapWrapper$$anon$1$$anon$5(this);
/*     */       }
/*     */       
/*     */       public class Wrappers$MapWrapper$$anon$1$$anon$5 implements Iterator<Map.Entry<A, B>> {
/*     */         private final Iterator<Tuple2<A, B>> ui;
/*     */         
/*     */         private Option<A> prev;
/*     */         
/*     */         public Wrappers$MapWrapper$$anon$1$$anon$5(Wrappers$MapWrapper$$anon$1 $outer) {
/* 177 */           this.ui = ($outer.scala$collection$convert$Wrappers$MapWrapper$$anon$$$outer()).scala$collection$convert$Wrappers$MapWrapper$$underlying.iterator();
/* 178 */           this.prev = (Option<A>)scala.None$.MODULE$;
/*     */         }
/*     */         
/*     */         private Iterator<Tuple2<A, B>> ui() {
/*     */           return this.ui;
/*     */         }
/*     */         
/*     */         private Option<A> prev() {
/* 178 */           return this.prev;
/*     */         }
/*     */         
/*     */         private void prev_$eq(Option<A> x$1) {
/* 178 */           this.prev = x$1;
/*     */         }
/*     */         
/*     */         public boolean hasNext() {
/* 180 */           return ui().hasNext();
/*     */         }
/*     */         
/*     */         public Object next() {
/* 183 */           Tuple2 tuple2 = (Tuple2)ui().next();
/* 183 */           if (tuple2 != null) {
/* 183 */             Tuple2 tuple21 = new Tuple2(tuple2._1(), tuple2._2());
/* 183 */             Object k = tuple21._1(), v = tuple21._2();
/* 184 */             prev_$eq((Option<A>)new Some(k));
/* 185 */             return new Wrappers$MapWrapper$$anon$1$$anon$5$$anon$6(this, k, ($anon$1$$anon$5)v);
/*     */           } 
/*     */           throw new MatchError(tuple2);
/*     */         }
/*     */         
/*     */         public class Wrappers$MapWrapper$$anon$1$$anon$5$$anon$6 implements Map.Entry<A, B> {
/*     */           private final Object k$1;
/*     */           
/*     */           private final Object v$1;
/*     */           
/*     */           public Wrappers$MapWrapper$$anon$1$$anon$5$$anon$6(Wrappers$MapWrapper$$anon$1$$anon$5 $outer, Object k$1, Object v$1) {}
/*     */           
/*     */           public A getKey() {
/* 187 */             return (A)this.k$1;
/*     */           }
/*     */           
/*     */           public B getValue() {
/* 188 */             return (B)this.v$1;
/*     */           }
/*     */           
/*     */           public B setValue(Object v1) {
/* 189 */             return this.$outer.scala$collection$convert$Wrappers$MapWrapper$$anon$$anon$$$outer().scala$collection$convert$Wrappers$MapWrapper$$anon$$$outer().put(this.k$1, (B)v1);
/*     */           }
/*     */           
/*     */           public int hashCode() {
/* 190 */             return scala.util.hashing.package$.MODULE$.byteswap32(this.k$1.hashCode()) + (scala.util.hashing.package$.MODULE$.byteswap32(this.v$1.hashCode()) << 16);
/*     */           }
/*     */           
/*     */           public boolean equals(Object other) {
/*     */             // Byte code:
/*     */             //   0: aload_1
/*     */             //   1: instanceof java/util/Map$Entry
/*     */             //   4: ifeq -> 183
/*     */             //   7: aload_1
/*     */             //   8: checkcast java/util/Map$Entry
/*     */             //   11: astore #4
/*     */             //   13: aload_0
/*     */             //   14: getfield k$1 : Ljava/lang/Object;
/*     */             //   17: aload #4
/*     */             //   19: invokeinterface getKey : ()Ljava/lang/Object;
/*     */             //   24: astore_3
/*     */             //   25: dup
/*     */             //   26: astore_2
/*     */             //   27: aload_3
/*     */             //   28: if_acmpne -> 35
/*     */             //   31: iconst_1
/*     */             //   32: goto -> 84
/*     */             //   35: aload_2
/*     */             //   36: ifnonnull -> 43
/*     */             //   39: iconst_0
/*     */             //   40: goto -> 84
/*     */             //   43: aload_2
/*     */             //   44: instanceof java/lang/Number
/*     */             //   47: ifeq -> 61
/*     */             //   50: aload_2
/*     */             //   51: checkcast java/lang/Number
/*     */             //   54: aload_3
/*     */             //   55: invokestatic equalsNumObject : (Ljava/lang/Number;Ljava/lang/Object;)Z
/*     */             //   58: goto -> 84
/*     */             //   61: aload_2
/*     */             //   62: instanceof java/lang/Character
/*     */             //   65: ifeq -> 79
/*     */             //   68: aload_2
/*     */             //   69: checkcast java/lang/Character
/*     */             //   72: aload_3
/*     */             //   73: invokestatic equalsCharObject : (Ljava/lang/Character;Ljava/lang/Object;)Z
/*     */             //   76: goto -> 84
/*     */             //   79: aload_2
/*     */             //   80: aload_3
/*     */             //   81: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */             //   84: ifeq -> 177
/*     */             //   87: aload_0
/*     */             //   88: getfield v$1 : Ljava/lang/Object;
/*     */             //   91: aload #4
/*     */             //   93: invokeinterface getValue : ()Ljava/lang/Object;
/*     */             //   98: astore #6
/*     */             //   100: dup
/*     */             //   101: astore #5
/*     */             //   103: aload #6
/*     */             //   105: if_acmpne -> 112
/*     */             //   108: iconst_1
/*     */             //   109: goto -> 170
/*     */             //   112: aload #5
/*     */             //   114: ifnonnull -> 121
/*     */             //   117: iconst_0
/*     */             //   118: goto -> 170
/*     */             //   121: aload #5
/*     */             //   123: instanceof java/lang/Number
/*     */             //   126: ifeq -> 142
/*     */             //   129: aload #5
/*     */             //   131: checkcast java/lang/Number
/*     */             //   134: aload #6
/*     */             //   136: invokestatic equalsNumObject : (Ljava/lang/Number;Ljava/lang/Object;)Z
/*     */             //   139: goto -> 170
/*     */             //   142: aload #5
/*     */             //   144: instanceof java/lang/Character
/*     */             //   147: ifeq -> 163
/*     */             //   150: aload #5
/*     */             //   152: checkcast java/lang/Character
/*     */             //   155: aload #6
/*     */             //   157: invokestatic equalsCharObject : (Ljava/lang/Character;Ljava/lang/Object;)Z
/*     */             //   160: goto -> 170
/*     */             //   163: aload #5
/*     */             //   165: aload #6
/*     */             //   167: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */             //   170: ifeq -> 177
/*     */             //   173: iconst_1
/*     */             //   174: goto -> 178
/*     */             //   177: iconst_0
/*     */             //   178: istore #7
/*     */             //   180: goto -> 186
/*     */             //   183: iconst_0
/*     */             //   184: istore #7
/*     */             //   186: iload #7
/*     */             //   188: ireturn
/*     */             // Line number table:
/*     */             //   Java source line number -> byte code offset
/*     */             //   #192	-> 0
/*     */             //   #191	-> 0
/*     */             //   #193	-> 183
/*     */             //   #191	-> 186
/*     */             // Local variable table:
/*     */             //   start	length	slot	name	descriptor
/*     */             //   0	189	0	this	Lscala/collection/convert/Wrappers$MapWrapper$$anon$1$$anon$5$$anon$6;
/*     */             //   0	189	1	other	Ljava/lang/Object;
/*     */           }
/*     */         }
/*     */         
/*     */         public void remove() {
/* 199 */           Option<A> option = prev();
/* 200 */           if (option instanceof Some) {
/* 200 */             Some some = (Some)option;
/* 201 */             Map map = (this.$outer.scala$collection$convert$Wrappers$MapWrapper$$anon$$$outer()).scala$collection$convert$Wrappers$MapWrapper$$underlying;
/* 202 */             if (map instanceof Map) {
/* 202 */               Map map1 = (Map)map;
/* 203 */               map1.remove(some.x());
/* 204 */               prev_$eq((Option<A>)scala.None$.MODULE$);
/*     */             } 
/* 206 */             throw new UnsupportedOperationException("remove");
/*     */           } 
/* 209 */           throw new IllegalStateException("next must be called at least once before remove");
/*     */         }
/*     */       }
/*     */     }
/*     */   }
/*     */   
/*     */   public class MutableMapWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 216 */       return "MutableMapWrapper";
/*     */     }
/*     */     
/*     */     public <A, B> Wrappers.MutableMapWrapper<A, B> apply(Map<A, B> underlying) {
/* 216 */       return new Wrappers.MutableMapWrapper<A, B>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Option<Map<A, B>> unapply(Wrappers.MutableMapWrapper x$0) {
/* 216 */       return (x$0 == null) ? (Option<Map<A, B>>)scala.None$.MODULE$ : (Option<Map<A, B>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 216 */       return this.$outer.MutableMapWrapper();
/*     */     }
/*     */     
/*     */     public MutableMapWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class MutableMapWrapper<A, B> extends MapWrapper<A, B> implements Product, Serializable {
/*     */     private final Map<A, B> underlying;
/*     */     
/*     */     public Map<A, B> underlying() {
/* 216 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A, B> MutableMapWrapper<A, B> copy(Map<A, B> underlying) {
/* 216 */       return new MutableMapWrapper(scala$collection$convert$Wrappers$MutableMapWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Map<A, B> copy$default$1() {
/* 216 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 216 */       return "MutableMapWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 216 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 216 */       switch (x$1) {
/*     */         default:
/* 216 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 216 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 216 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/* 216 */       return x$1 instanceof MutableMapWrapper;
/*     */     }
/*     */     
/*     */     public MutableMapWrapper(Wrappers $outer, Map<A, B> underlying) {
/* 216 */       super($outer, (Map<A, B>)underlying);
/* 216 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public B put(Object k, Object v) {
/* 217 */       Option option = underlying().put(k, v);
/* 218 */       if (option instanceof Some) {
/* 218 */         Some some = (Some)option;
/* 218 */         Object object = some.x();
/*     */       } 
/* 219 */       if (scala.None$.MODULE$ == null) {
/* 219 */         if (option != null)
/*     */           throw new MatchError(option); 
/* 219 */       } else if (!scala.None$.MODULE$.equals(option)) {
/*     */         throw new MatchError(option);
/*     */       } 
/* 219 */       return null;
/*     */     }
/*     */     
/*     */     public B remove(Object k) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: invokevirtual underlying : ()Lscala/collection/mutable/Map;
/*     */       //   4: aload_1
/*     */       //   5: invokeinterface remove : (Ljava/lang/Object;)Lscala/Option;
/*     */       //   10: astore #4
/*     */       //   12: getstatic scala/None$.MODULE$ : Lscala/None$;
/*     */       //   15: dup
/*     */       //   16: ifnonnull -> 28
/*     */       //   19: pop
/*     */       //   20: aload #4
/*     */       //   22: ifnull -> 36
/*     */       //   25: goto -> 41
/*     */       //   28: aload #4
/*     */       //   30: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   33: ifeq -> 41
/*     */       //   36: aconst_null
/*     */       //   37: astore_3
/*     */       //   38: goto -> 60
/*     */       //   41: aload #4
/*     */       //   43: instanceof scala/Some
/*     */       //   46: ifeq -> 64
/*     */       //   49: aload #4
/*     */       //   51: checkcast scala/Some
/*     */       //   54: astore_2
/*     */       //   55: aload_2
/*     */       //   56: invokevirtual x : ()Ljava/lang/Object;
/*     */       //   59: astore_3
/*     */       //   60: aload_3
/*     */       //   61: goto -> 76
/*     */       //   64: new scala/MatchError
/*     */       //   67: dup
/*     */       //   68: aload #4
/*     */       //   70: invokespecial <init> : (Ljava/lang/Object;)V
/*     */       //   73: athrow
/*     */       //   74: pop
/*     */       //   75: aconst_null
/*     */       //   76: areturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #223	-> 0
/*     */       //   #224	-> 12
/*     */       //   #225	-> 41
/*     */       //   #223	-> 55
/*     */       //   #225	-> 56
/*     */       //   #223	-> 60
/*     */       //   #222	-> 74
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	77	0	this	Lscala/collection/convert/Wrappers$MutableMapWrapper;
/*     */       //   0	77	1	k	Ljava/lang/Object;
/*     */       // Exception table:
/*     */       //   from	to	target	type
/*     */       //   0	74	74	java/lang/ClassCastException
/*     */     }
/*     */     
/*     */     public void clear() {
/* 231 */       underlying().clear();
/*     */     }
/*     */   }
/*     */   
/*     */   public abstract class JMapWrapperLike$class {
/*     */     public static void $init$(Wrappers.JMapWrapperLike $this) {}
/*     */     
/*     */     public static int size(Wrappers.JMapWrapperLike $this) {
/* 237 */       return $this.underlying().size();
/*     */     }
/*     */     
/*     */     public static Option get(Wrappers.JMapWrapperLike $this, Object k) {
/* 240 */       Object v = $this.underlying().get(k);
/* 241 */       return (v == null) ? (
/*     */         
/* 243 */         $this.underlying().containsKey(k) ? 
/* 244 */         (Option)new Some(null) : 
/*     */         
/* 246 */         (Option)scala.None$.MODULE$) : (Option)new Some(v);
/*     */     }
/*     */     
/*     */     public static Wrappers.JMapWrapperLike $plus$eq(Wrappers.JMapWrapperLike $this, Tuple2 kv) {
/* 249 */       $this.underlying().put(kv._1(), kv._2());
/* 249 */       return $this;
/*     */     }
/*     */     
/*     */     public static Wrappers.JMapWrapperLike $minus$eq(Wrappers.JMapWrapperLike $this, Object key) {
/* 250 */       $this.underlying().remove(key);
/* 250 */       return $this;
/*     */     }
/*     */     
/*     */     public static Option put(Wrappers.JMapWrapperLike $this, Object k, Object v) {
/* 253 */       Object r = $this.underlying().put(k, v);
/* 254 */       return (r == null) ? (Option)scala.None$.MODULE$ : (Option)new Some(r);
/*     */     }
/*     */     
/*     */     public static void update(Wrappers.JMapWrapperLike $this, Object k, Object v) {
/* 257 */       $this.underlying().put(k, v);
/*     */     }
/*     */     
/*     */     public static Option remove(Wrappers.JMapWrapperLike $this, Object k) {
/* 260 */       Object r = $this.underlying().remove(k);
/* 261 */       return (r == null) ? (Option)scala.None$.MODULE$ : (Option)new Some(r);
/*     */     }
/*     */     
/*     */     public static Iterator iterator(Wrappers.JMapWrapperLike<A, B, Repr> $this) {
/* 264 */       return (Iterator)new Wrappers$JMapWrapperLike$$anon$2($this);
/*     */     }
/*     */     
/*     */     public static void clear(Wrappers.JMapWrapperLike $this) {
/* 270 */       $this.underlying().clear();
/*     */     }
/*     */     
/*     */     public static Map empty(Wrappers.JMapWrapperLike $this) {
/*     */       return null;
/*     */     }
/*     */   }
/*     */   
/*     */   public interface JMapWrapperLike<A, B, Repr extends MapLike<A, B, Repr> & Map<A, B>> extends Map<A, B>, MapLike<A, B, Repr> {
/*     */     Map<A, B> underlying();
/*     */     
/*     */     int size();
/*     */     
/*     */     Option<B> get(A param1A);
/*     */     
/*     */     JMapWrapperLike<A, B, Repr> $plus$eq(Tuple2<A, B> param1Tuple2);
/*     */     
/*     */     JMapWrapperLike<A, B, Repr> $minus$eq(A param1A);
/*     */     
/*     */     Option<B> put(A param1A, B param1B);
/*     */     
/*     */     void update(A param1A, B param1B);
/*     */     
/*     */     Option<B> remove(A param1A);
/*     */     
/*     */     Iterator<Tuple2<A, B>> iterator();
/*     */     
/*     */     void clear();
/*     */     
/*     */     Repr empty();
/*     */     
/*     */     public class Wrappers$JMapWrapperLike$$anon$2 extends AbstractIterator<Tuple2<A, B>> {
/*     */       private final Iterator<Map.Entry<A, B>> ui;
/*     */       
/*     */       public Wrappers$JMapWrapperLike$$anon$2(Wrappers.JMapWrapperLike $outer) {
/*     */         this.ui = $outer.underlying().entrySet().iterator();
/*     */       }
/*     */       
/*     */       private Iterator<Map.Entry<A, B>> ui() {
/*     */         return this.ui;
/*     */       }
/*     */       
/*     */       public boolean hasNext() {
/*     */         return ui().hasNext();
/*     */       }
/*     */       
/*     */       public Tuple2<A, B> next() {
/*     */         Map.Entry e = ui().next();
/*     */         return new Tuple2(e.getKey(), e.getValue());
/*     */       }
/*     */     }
/*     */   }
/*     */   
/*     */   public class JMapWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 275 */       return "JMapWrapper";
/*     */     }
/*     */     
/*     */     public <A, B> Wrappers.JMapWrapper<A, B> apply(Map<A, B> underlying) {
/* 275 */       return new Wrappers.JMapWrapper<A, B>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Option<Map<A, B>> unapply(Wrappers.JMapWrapper x$0) {
/* 275 */       return (x$0 == null) ? (Option<Map<A, B>>)scala.None$.MODULE$ : (Option<Map<A, B>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 275 */       return this.$outer.JMapWrapper();
/*     */     }
/*     */     
/*     */     public JMapWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JMapWrapper<A, B> extends AbstractMap<A, B> implements JMapWrapperLike<A, B, JMapWrapper<A, B>>, Product, Serializable {
/*     */     private final Map<A, B> underlying;
/*     */     
/*     */     public int size() {
/* 275 */       return Wrappers.JMapWrapperLike$class.size(this);
/*     */     }
/*     */     
/*     */     public Option<B> get(Object k) {
/* 275 */       return Wrappers.JMapWrapperLike$class.get(this, k);
/*     */     }
/*     */     
/*     */     public Wrappers.JMapWrapperLike<A, B, JMapWrapper<A, B>> $plus$eq(Tuple2 kv) {
/* 275 */       return Wrappers.JMapWrapperLike$class.$plus$eq(this, kv);
/*     */     }
/*     */     
/*     */     public Wrappers.JMapWrapperLike<A, B, JMapWrapper<A, B>> $minus$eq(Object key) {
/* 275 */       return Wrappers.JMapWrapperLike$class.$minus$eq(this, key);
/*     */     }
/*     */     
/*     */     public Option<B> put(Object k, Object v) {
/* 275 */       return Wrappers.JMapWrapperLike$class.put(this, k, v);
/*     */     }
/*     */     
/*     */     public void update(Object k, Object v) {
/* 275 */       Wrappers.JMapWrapperLike$class.update(this, k, v);
/*     */     }
/*     */     
/*     */     public Option<B> remove(Object k) {
/* 275 */       return Wrappers.JMapWrapperLike$class.remove(this, k);
/*     */     }
/*     */     
/*     */     public Iterator<Tuple2<A, B>> iterator() {
/* 275 */       return Wrappers.JMapWrapperLike$class.iterator(this);
/*     */     }
/*     */     
/*     */     public void clear() {
/* 275 */       Wrappers.JMapWrapperLike$class.clear(this);
/*     */     }
/*     */     
/*     */     public Map<A, B> underlying() {
/* 275 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A, B> JMapWrapper<A, B> copy(Map<A, B> underlying) {
/* 275 */       return new JMapWrapper(scala$collection$convert$Wrappers$JMapWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Map<A, B> copy$default$1() {
/* 275 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 275 */       return "JMapWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 275 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 275 */       switch (x$1) {
/*     */         default:
/* 275 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 275 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 275 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JMapWrapper(Wrappers $outer, Map<A, B> underlying) {
/* 275 */       Wrappers.JMapWrapperLike$class.$init$(this);
/* 275 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public JMapWrapper<A, B> empty() {
/* 276 */       return new JMapWrapper(scala$collection$convert$Wrappers$JMapWrapper$$$outer(), new HashMap<A, B>());
/*     */     }
/*     */   }
/*     */   
/*     */   public class ConcurrentMapDeprecatedWrapper<A, B> extends MutableMapWrapper<A, B> implements ConcurrentMap<A, B> {
/*     */     public ConcurrentMap<A, B> underlying() {
/* 279 */       return (ConcurrentMap<A, B>)super.underlying();
/*     */     }
/*     */     
/*     */     public ConcurrentMapDeprecatedWrapper(Wrappers $outer, ConcurrentMap underlying) {
/* 279 */       super($outer, (Map<A, B>)underlying);
/*     */     }
/*     */     
/*     */     public B putIfAbsent(Object k, Object v) {
/* 281 */       Option option = underlying().putIfAbsent(k, v);
/* 282 */       if (option instanceof Some) {
/* 282 */         Some some = (Some)option;
/* 282 */         Object object = some.x();
/*     */       } 
/* 283 */       if (scala.None$.MODULE$ == null) {
/* 283 */         if (option != null)
/*     */           throw new MatchError(option); 
/* 283 */       } else if (!scala.None$.MODULE$.equals(option)) {
/*     */         throw new MatchError(option);
/*     */       } 
/* 283 */       return null;
/*     */     }
/*     */     
/*     */     public boolean remove(Object k, Object v) {
/*     */       try {
/*     */       
/* 286 */       } catch (ClassCastException classCastException) {}
/* 286 */       return false;
/*     */     }
/*     */     
/*     */     public B replace(Object k, Object v) {
/* 293 */       Option option = underlying().replace(k, v);
/* 294 */       if (option instanceof Some) {
/* 294 */         Some some = (Some)option;
/* 294 */         Object object = some.x();
/*     */       } 
/* 295 */       if (scala.None$.MODULE$ == null) {
/* 295 */         if (option != null)
/*     */           throw new MatchError(option); 
/* 295 */       } else if (!scala.None$.MODULE$.equals(option)) {
/*     */         throw new MatchError(option);
/*     */       } 
/* 295 */       return null;
/*     */     }
/*     */     
/*     */     public boolean replace(Object k, Object oldval, Object newval) {
/* 298 */       return underlying().replace(k, oldval, newval);
/*     */     }
/*     */   }
/*     */   
/*     */   public class ConcurrentMapWrapper<A, B> extends MutableMapWrapper<A, B> implements ConcurrentMap<A, B> {
/*     */     public Map<A, B> underlying() {
/* 301 */       return (Map<A, B>)super.underlying();
/*     */     }
/*     */     
/*     */     public ConcurrentMapWrapper(Wrappers $outer, Map underlying) {
/* 301 */       super($outer, (Map<A, B>)underlying);
/*     */     }
/*     */     
/*     */     public B putIfAbsent(Object k, Object v) {
/* 303 */       Option option = underlying().putIfAbsent(k, v);
/* 304 */       if (option instanceof Some) {
/* 304 */         Some some = (Some)option;
/* 304 */         Object object = some.x();
/*     */       } 
/* 305 */       if (scala.None$.MODULE$ == null) {
/* 305 */         if (option != null)
/*     */           throw new MatchError(option); 
/* 305 */       } else if (!scala.None$.MODULE$.equals(option)) {
/*     */         throw new MatchError(option);
/*     */       } 
/* 305 */       return null;
/*     */     }
/*     */     
/*     */     public boolean remove(Object k, Object v) {
/*     */       try {
/*     */       
/* 308 */       } catch (ClassCastException classCastException) {}
/* 308 */       return false;
/*     */     }
/*     */     
/*     */     public B replace(Object k, Object v) {
/* 315 */       Option option = underlying().replace(k, v);
/* 316 */       if (option instanceof Some) {
/* 316 */         Some some = (Some)option;
/* 316 */         Object object = some.x();
/*     */       } 
/* 317 */       if (scala.None$.MODULE$ == null) {
/* 317 */         if (option != null)
/*     */           throw new MatchError(option); 
/* 317 */       } else if (!scala.None$.MODULE$.equals(option)) {
/*     */         throw new MatchError(option);
/*     */       } 
/* 317 */       return null;
/*     */     }
/*     */     
/*     */     public boolean replace(Object k, Object oldval, Object newval) {
/* 320 */       return underlying().replace(k, oldval, newval);
/*     */     }
/*     */   }
/*     */   
/*     */   public class JConcurrentMapDeprecatedWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 323 */       return "JConcurrentMapDeprecatedWrapper";
/*     */     }
/*     */     
/*     */     public <A, B> Wrappers.JConcurrentMapDeprecatedWrapper<A, B> apply(ConcurrentMap<A, B> underlying) {
/* 323 */       return new Wrappers.JConcurrentMapDeprecatedWrapper<A, B>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Option<ConcurrentMap<A, B>> unapply(Wrappers.JConcurrentMapDeprecatedWrapper x$0) {
/* 323 */       return (x$0 == null) ? (Option<ConcurrentMap<A, B>>)scala.None$.MODULE$ : (Option<ConcurrentMap<A, B>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 323 */       return this.$outer.JConcurrentMapDeprecatedWrapper();
/*     */     }
/*     */     
/*     */     public JConcurrentMapDeprecatedWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JConcurrentMapDeprecatedWrapper<A, B> extends AbstractMap<A, B> implements JMapWrapperLike<A, B, JConcurrentMapDeprecatedWrapper<A, B>>, ConcurrentMap<A, B>, Product, Serializable {
/*     */     private final ConcurrentMap<A, B> underlying;
/*     */     
/*     */     public int size() {
/* 323 */       return Wrappers.JMapWrapperLike$class.size(this);
/*     */     }
/*     */     
/*     */     public Wrappers.JMapWrapperLike<A, B, JConcurrentMapDeprecatedWrapper<A, B>> $plus$eq(Tuple2 kv) {
/* 323 */       return Wrappers.JMapWrapperLike$class.$plus$eq(this, kv);
/*     */     }
/*     */     
/*     */     public Wrappers.JMapWrapperLike<A, B, JConcurrentMapDeprecatedWrapper<A, B>> $minus$eq(Object key) {
/* 323 */       return Wrappers.JMapWrapperLike$class.$minus$eq(this, key);
/*     */     }
/*     */     
/*     */     public Option<B> put(Object k, Object v) {
/* 323 */       return Wrappers.JMapWrapperLike$class.put(this, k, v);
/*     */     }
/*     */     
/*     */     public void update(Object k, Object v) {
/* 323 */       Wrappers.JMapWrapperLike$class.update(this, k, v);
/*     */     }
/*     */     
/*     */     public Option<B> remove(Object k) {
/* 323 */       return Wrappers.JMapWrapperLike$class.remove(this, k);
/*     */     }
/*     */     
/*     */     public Iterator<Tuple2<A, B>> iterator() {
/* 323 */       return Wrappers.JMapWrapperLike$class.iterator(this);
/*     */     }
/*     */     
/*     */     public void clear() {
/* 323 */       Wrappers.JMapWrapperLike$class.clear(this);
/*     */     }
/*     */     
/*     */     public ConcurrentMap<A, B> underlying() {
/* 323 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A, B> JConcurrentMapDeprecatedWrapper<A, B> copy(ConcurrentMap<A, B> underlying) {
/* 323 */       return new JConcurrentMapDeprecatedWrapper(scala$collection$convert$Wrappers$JConcurrentMapDeprecatedWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A, B> ConcurrentMap<A, B> copy$default$1() {
/* 323 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 323 */       return "JConcurrentMapDeprecatedWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 323 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 323 */       switch (x$1) {
/*     */         default:
/* 323 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 323 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 323 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JConcurrentMapDeprecatedWrapper(Wrappers $outer, ConcurrentMap<A, B> underlying) {
/* 323 */       Wrappers.JMapWrapperLike$class.$init$(this);
/* 323 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public Option<B> get(Object k) {
/* 325 */       Object v = underlying().get(k);
/* 326 */       return (v == null) ? 
/* 327 */         (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(v);
/*     */     }
/*     */     
/*     */     public JConcurrentMapDeprecatedWrapper<A, B> empty() {
/* 330 */       return new JConcurrentMapDeprecatedWrapper(scala$collection$convert$Wrappers$JConcurrentMapDeprecatedWrapper$$$outer(), new ConcurrentHashMap<A, B>());
/*     */     }
/*     */     
/*     */     public Option<B> putIfAbsent(Object k, Object v) {
/* 333 */       Object r = underlying().putIfAbsent((A)k, (B)v);
/* 334 */       return (r == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(r);
/*     */     }
/*     */     
/*     */     public boolean remove(Object k, Object v) {
/* 337 */       return underlying().remove(k, v);
/*     */     }
/*     */     
/*     */     public Option<B> replace(Object k, Object v) {
/* 340 */       Object prev = underlying().replace((A)k, (B)v);
/* 341 */       return (prev == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(prev);
/*     */     }
/*     */     
/*     */     public boolean replace(Object k, Object oldvalue, Object newvalue) {
/* 345 */       return underlying().replace((A)k, (B)oldvalue, (B)newvalue);
/*     */     }
/*     */   }
/*     */   
/*     */   public class JConcurrentMapWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 348 */       return "JConcurrentMapWrapper";
/*     */     }
/*     */     
/*     */     public <A, B> Wrappers.JConcurrentMapWrapper<A, B> apply(ConcurrentMap<A, B> underlying) {
/* 348 */       return new Wrappers.JConcurrentMapWrapper<A, B>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Option<ConcurrentMap<A, B>> unapply(Wrappers.JConcurrentMapWrapper x$0) {
/* 348 */       return (x$0 == null) ? (Option<ConcurrentMap<A, B>>)scala.None$.MODULE$ : (Option<ConcurrentMap<A, B>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 348 */       return this.$outer.JConcurrentMapWrapper();
/*     */     }
/*     */     
/*     */     public JConcurrentMapWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class JConcurrentMapWrapper<A, B> extends AbstractMap<A, B> implements JMapWrapperLike<A, B, JConcurrentMapWrapper<A, B>>, Map<A, B>, Product, Serializable {
/*     */     private final ConcurrentMap<A, B> underlying;
/*     */     
/*     */     public int size() {
/* 348 */       return Wrappers.JMapWrapperLike$class.size(this);
/*     */     }
/*     */     
/*     */     public Wrappers.JMapWrapperLike<A, B, JConcurrentMapWrapper<A, B>> $plus$eq(Tuple2 kv) {
/* 348 */       return Wrappers.JMapWrapperLike$class.$plus$eq(this, kv);
/*     */     }
/*     */     
/*     */     public Wrappers.JMapWrapperLike<A, B, JConcurrentMapWrapper<A, B>> $minus$eq(Object key) {
/* 348 */       return Wrappers.JMapWrapperLike$class.$minus$eq(this, key);
/*     */     }
/*     */     
/*     */     public Option<B> put(Object k, Object v) {
/* 348 */       return Wrappers.JMapWrapperLike$class.put(this, k, v);
/*     */     }
/*     */     
/*     */     public void update(Object k, Object v) {
/* 348 */       Wrappers.JMapWrapperLike$class.update(this, k, v);
/*     */     }
/*     */     
/*     */     public Option<B> remove(Object k) {
/* 348 */       return Wrappers.JMapWrapperLike$class.remove(this, k);
/*     */     }
/*     */     
/*     */     public Iterator<Tuple2<A, B>> iterator() {
/* 348 */       return Wrappers.JMapWrapperLike$class.iterator(this);
/*     */     }
/*     */     
/*     */     public void clear() {
/* 348 */       Wrappers.JMapWrapperLike$class.clear(this);
/*     */     }
/*     */     
/*     */     public ConcurrentMap<A, B> underlying() {
/* 348 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A, B> JConcurrentMapWrapper<A, B> copy(ConcurrentMap<A, B> underlying) {
/* 348 */       return new JConcurrentMapWrapper(scala$collection$convert$Wrappers$JConcurrentMapWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A, B> ConcurrentMap<A, B> copy$default$1() {
/* 348 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 348 */       return "JConcurrentMapWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 348 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 348 */       switch (x$1) {
/*     */         default:
/* 348 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 348 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 348 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JConcurrentMapWrapper(Wrappers $outer, ConcurrentMap<A, B> underlying) {
/* 348 */       Wrappers.JMapWrapperLike$class.$init$(this);
/* 348 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public Option<B> get(Object k) {
/* 350 */       Object v = underlying().get(k);
/* 351 */       return (v == null) ? 
/* 352 */         (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(v);
/*     */     }
/*     */     
/*     */     public JConcurrentMapWrapper<A, B> empty() {
/* 355 */       return new JConcurrentMapWrapper(scala$collection$convert$Wrappers$JConcurrentMapWrapper$$$outer(), new ConcurrentHashMap<A, B>());
/*     */     }
/*     */     
/*     */     public Option<B> putIfAbsent(Object k, Object v) {
/* 358 */       Object r = underlying().putIfAbsent((A)k, (B)v);
/* 359 */       return (r == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(r);
/*     */     }
/*     */     
/*     */     public boolean remove(Object k, Object v) {
/* 362 */       return underlying().remove(k, v);
/*     */     }
/*     */     
/*     */     public Option<B> replace(Object k, Object v) {
/* 365 */       Object prev = underlying().replace((A)k, (B)v);
/* 366 */       return (prev == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(prev);
/*     */     }
/*     */     
/*     */     public boolean replace(Object k, Object oldvalue, Object newvalue) {
/* 370 */       return underlying().replace((A)k, (B)oldvalue, (B)newvalue);
/*     */     }
/*     */   }
/*     */   
/*     */   public class DictionaryWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 373 */       return "DictionaryWrapper";
/*     */     }
/*     */     
/*     */     public <A, B> Wrappers.DictionaryWrapper<A, B> apply(Map<A, B> underlying) {
/* 373 */       return new Wrappers.DictionaryWrapper<A, B>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Option<Map<A, B>> unapply(Wrappers.DictionaryWrapper x$0) {
/* 373 */       return (x$0 == null) ? (Option<Map<A, B>>)scala.None$.MODULE$ : (Option<Map<A, B>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 373 */       return this.$outer.DictionaryWrapper();
/*     */     }
/*     */     
/*     */     public DictionaryWrapper$(Wrappers $outer) {}
/*     */   }
/*     */   
/*     */   public class DictionaryWrapper<A, B> extends Dictionary<A, B> implements Product, Serializable {
/*     */     private final Map<A, B> underlying;
/*     */     
/*     */     public Map<A, B> underlying() {
/* 373 */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A, B> DictionaryWrapper<A, B> copy(Map<A, B> underlying) {
/* 373 */       return new DictionaryWrapper(scala$collection$convert$Wrappers$DictionaryWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Map<A, B> copy$default$1() {
/* 373 */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/* 373 */       return "DictionaryWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/* 373 */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/* 373 */       switch (x$1) {
/*     */         default:
/* 373 */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/* 373 */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/* 373 */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public boolean canEqual(Object x$1) {
/* 373 */       return x$1 instanceof DictionaryWrapper;
/*     */     }
/*     */     
/*     */     public int hashCode() {
/* 373 */       return scala.runtime.ScalaRunTime$.MODULE$._hashCode(this);
/*     */     }
/*     */     
/*     */     public String toString() {
/* 373 */       return scala.runtime.ScalaRunTime$.MODULE$._toString(this);
/*     */     }
/*     */     
/*     */     public boolean equals(Object x$1) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: aload_1
/*     */       //   2: if_acmpeq -> 89
/*     */       //   5: aload_1
/*     */       //   6: instanceof scala/collection/convert/Wrappers$DictionaryWrapper
/*     */       //   9: ifeq -> 31
/*     */       //   12: aload_1
/*     */       //   13: checkcast scala/collection/convert/Wrappers$DictionaryWrapper
/*     */       //   16: invokevirtual scala$collection$convert$Wrappers$DictionaryWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   19: aload_0
/*     */       //   20: invokevirtual scala$collection$convert$Wrappers$DictionaryWrapper$$$outer : ()Lscala/collection/convert/Wrappers;
/*     */       //   23: if_acmpne -> 31
/*     */       //   26: iconst_1
/*     */       //   27: istore_2
/*     */       //   28: goto -> 33
/*     */       //   31: iconst_0
/*     */       //   32: istore_2
/*     */       //   33: iload_2
/*     */       //   34: ifeq -> 93
/*     */       //   37: aload_1
/*     */       //   38: checkcast scala/collection/convert/Wrappers$DictionaryWrapper
/*     */       //   41: astore #4
/*     */       //   43: aload_0
/*     */       //   44: invokevirtual underlying : ()Lscala/collection/mutable/Map;
/*     */       //   47: aload #4
/*     */       //   49: invokevirtual underlying : ()Lscala/collection/mutable/Map;
/*     */       //   52: astore_3
/*     */       //   53: dup
/*     */       //   54: ifnonnull -> 65
/*     */       //   57: pop
/*     */       //   58: aload_3
/*     */       //   59: ifnull -> 72
/*     */       //   62: goto -> 85
/*     */       //   65: aload_3
/*     */       //   66: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   69: ifeq -> 85
/*     */       //   72: aload #4
/*     */       //   74: aload_0
/*     */       //   75: invokevirtual canEqual : (Ljava/lang/Object;)Z
/*     */       //   78: ifeq -> 85
/*     */       //   81: iconst_1
/*     */       //   82: goto -> 86
/*     */       //   85: iconst_0
/*     */       //   86: ifeq -> 93
/*     */       //   89: iconst_1
/*     */       //   90: goto -> 94
/*     */       //   93: iconst_0
/*     */       //   94: ireturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #373	-> 0
/*     */       //   #236	-> 26
/*     */       //   #373	-> 33
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	95	0	this	Lscala/collection/convert/Wrappers$DictionaryWrapper;
/*     */       //   0	95	1	x$1	Ljava/lang/Object;
/*     */     }
/*     */     
/*     */     public DictionaryWrapper(Wrappers $outer, Map<A, B> underlying) {
/* 373 */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public int size() {
/* 374 */       return underlying().size();
/*     */     }
/*     */     
/*     */     public boolean isEmpty() {
/* 375 */       return underlying().isEmpty();
/*     */     }
/*     */     
/*     */     public Enumeration<A> keys() {
/* 376 */       return WrapAsJava$.MODULE$.asJavaEnumeration(underlying().keysIterator());
/*     */     }
/*     */     
/*     */     public Enumeration<B> elements() {
/* 377 */       return WrapAsJava$.MODULE$.asJavaEnumeration(underlying().valuesIterator());
/*     */     }
/*     */     
/*     */     public B get(Object key) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: invokevirtual underlying : ()Lscala/collection/mutable/Map;
/*     */       //   4: aload_1
/*     */       //   5: invokeinterface get : (Ljava/lang/Object;)Lscala/Option;
/*     */       //   10: astore #4
/*     */       //   12: getstatic scala/None$.MODULE$ : Lscala/None$;
/*     */       //   15: dup
/*     */       //   16: ifnonnull -> 28
/*     */       //   19: pop
/*     */       //   20: aload #4
/*     */       //   22: ifnull -> 36
/*     */       //   25: goto -> 41
/*     */       //   28: aload #4
/*     */       //   30: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   33: ifeq -> 41
/*     */       //   36: aconst_null
/*     */       //   37: astore_3
/*     */       //   38: goto -> 60
/*     */       //   41: aload #4
/*     */       //   43: instanceof scala/Some
/*     */       //   46: ifeq -> 64
/*     */       //   49: aload #4
/*     */       //   51: checkcast scala/Some
/*     */       //   54: astore_2
/*     */       //   55: aload_2
/*     */       //   56: invokevirtual x : ()Ljava/lang/Object;
/*     */       //   59: astore_3
/*     */       //   60: aload_3
/*     */       //   61: goto -> 76
/*     */       //   64: new scala/MatchError
/*     */       //   67: dup
/*     */       //   68: aload #4
/*     */       //   70: invokespecial <init> : (Ljava/lang/Object;)V
/*     */       //   73: athrow
/*     */       //   74: pop
/*     */       //   75: aconst_null
/*     */       //   76: areturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #379	-> 0
/*     */       //   #380	-> 12
/*     */       //   #381	-> 41
/*     */       //   #379	-> 55
/*     */       //   #381	-> 56
/*     */       //   #379	-> 60
/*     */       //   #378	-> 74
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	77	0	this	Lscala/collection/convert/Wrappers$DictionaryWrapper;
/*     */       //   0	77	1	key	Ljava/lang/Object;
/*     */       // Exception table:
/*     */       //   from	to	target	type
/*     */       //   0	74	74	java/lang/ClassCastException
/*     */     }
/*     */     
/*     */     public B put(Object key, Object value) {
/* 386 */       Option option = underlying().put(key, value);
/* 387 */       if (option instanceof Some) {
/* 387 */         Some some = (Some)option;
/* 387 */         Object object = some.x();
/*     */       } 
/* 388 */       if (scala.None$.MODULE$ == null) {
/* 388 */         if (option != null)
/*     */           throw new MatchError(option); 
/* 388 */       } else if (!scala.None$.MODULE$.equals(option)) {
/*     */         throw new MatchError(option);
/*     */       } 
/* 388 */       return null;
/*     */     }
/*     */     
/*     */     public B remove(Object key) {
/*     */       // Byte code:
/*     */       //   0: aload_0
/*     */       //   1: invokevirtual underlying : ()Lscala/collection/mutable/Map;
/*     */       //   4: aload_1
/*     */       //   5: invokeinterface remove : (Ljava/lang/Object;)Lscala/Option;
/*     */       //   10: astore #4
/*     */       //   12: getstatic scala/None$.MODULE$ : Lscala/None$;
/*     */       //   15: dup
/*     */       //   16: ifnonnull -> 28
/*     */       //   19: pop
/*     */       //   20: aload #4
/*     */       //   22: ifnull -> 36
/*     */       //   25: goto -> 41
/*     */       //   28: aload #4
/*     */       //   30: invokevirtual equals : (Ljava/lang/Object;)Z
/*     */       //   33: ifeq -> 41
/*     */       //   36: aconst_null
/*     */       //   37: astore_3
/*     */       //   38: goto -> 60
/*     */       //   41: aload #4
/*     */       //   43: instanceof scala/Some
/*     */       //   46: ifeq -> 64
/*     */       //   49: aload #4
/*     */       //   51: checkcast scala/Some
/*     */       //   54: astore_2
/*     */       //   55: aload_2
/*     */       //   56: invokevirtual x : ()Ljava/lang/Object;
/*     */       //   59: astore_3
/*     */       //   60: aload_3
/*     */       //   61: goto -> 76
/*     */       //   64: new scala/MatchError
/*     */       //   67: dup
/*     */       //   68: aload #4
/*     */       //   70: invokespecial <init> : (Ljava/lang/Object;)V
/*     */       //   73: athrow
/*     */       //   74: pop
/*     */       //   75: aconst_null
/*     */       //   76: areturn
/*     */       // Line number table:
/*     */       //   Java source line number -> byte code offset
/*     */       //   #391	-> 0
/*     */       //   #392	-> 12
/*     */       //   #393	-> 41
/*     */       //   #391	-> 55
/*     */       //   #393	-> 56
/*     */       //   #391	-> 60
/*     */       //   #390	-> 74
/*     */       // Local variable table:
/*     */       //   start	length	slot	name	descriptor
/*     */       //   0	77	0	this	Lscala/collection/convert/Wrappers$DictionaryWrapper;
/*     */       //   0	77	1	key	Ljava/lang/Object;
/*     */       // Exception table:
/*     */       //   from	to	target	type
/*     */       //   0	74	74	java/lang/ClassCastException
/*     */     }
/*     */   }
/*     */   
/*     */   public class JDictionaryWrapper$ implements Serializable {
/*     */     public final String toString() {
/* 400 */       return "JDictionaryWrapper";
/*     */     }
/*     */     
/*     */     public <A, B> Wrappers.JDictionaryWrapper<A, B> apply(Dictionary<A, B> underlying) {
/* 400 */       return new Wrappers.JDictionaryWrapper<A, B>(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Option<Dictionary<A, B>> unapply(Wrappers.JDictionaryWrapper x$0) {
/* 400 */       return (x$0 == null) ? (Option<Dictionary<A, B>>)scala.None$.MODULE$ : (Option<Dictionary<A, B>>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 400 */       return this.$outer.JDictionaryWrapper();
/*     */     }
/*     */     
/*     */     public JDictionaryWrapper$(Wrappers $outer) {}
/*     */     
/*     */     public class Wrappers$JDictionaryWrapper$$anonfun$iterator$1 extends AbstractFunction1<A, Tuple2<A, B>> implements Serializable {
/*     */       public static final long serialVersionUID = 0L;
/*     */       
/*     */       public final Tuple2<A, B> apply(Object k) {
/* 423 */         return new Tuple2(k, this.$outer.underlying().get(k));
/*     */       }
/*     */       
/*     */       public Wrappers$JDictionaryWrapper$$anonfun$iterator$1(Wrappers.JDictionaryWrapper $outer) {}
/*     */     }
/*     */   }
/*     */   
/*     */   public class JDictionaryWrapper<A, B> extends AbstractMap<A, B> implements Map<A, B>, Product, Serializable {
/*     */     private final Dictionary<A, B> underlying;
/*     */     
/*     */     public Dictionary<A, B> underlying() {
/*     */       return this.underlying;
/*     */     }
/*     */     
/*     */     public <A, B> JDictionaryWrapper<A, B> copy(Dictionary<A, B> underlying) {
/*     */       return new JDictionaryWrapper(scala$collection$convert$Wrappers$JDictionaryWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public <A, B> Dictionary<A, B> copy$default$1() {
/*     */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*     */       return "JDictionaryWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*     */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*     */       switch (x$1) {
/*     */         default:
/*     */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*     */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*     */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JDictionaryWrapper(Wrappers $outer, Dictionary<A, B> underlying) {
/*     */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public int size() {
/*     */       return underlying().size();
/*     */     }
/*     */     
/*     */     public Option<B> get(Object k) {
/*     */       Object v = underlying().get(k);
/*     */       return (v == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(v);
/*     */     }
/*     */     
/*     */     public JDictionaryWrapper<A, B> $plus$eq(Tuple2 kv) {
/*     */       underlying().put((A)kv._1(), (B)kv._2());
/*     */       return this;
/*     */     }
/*     */     
/*     */     public JDictionaryWrapper<A, B> $minus$eq(Object key) {
/*     */       underlying().remove(key);
/*     */       return this;
/*     */     }
/*     */     
/*     */     public Option<B> put(Object k, Object v) {
/*     */       Object r = underlying().put((A)k, (B)v);
/*     */       return (r == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(r);
/*     */     }
/*     */     
/*     */     public void update(Object k, Object v) {
/*     */       underlying().put((A)k, (B)v);
/*     */     }
/*     */     
/*     */     public Option<B> remove(Object k) {
/*     */       Object r = underlying().remove(k);
/*     */       return (r == null) ? (Option<B>)scala.None$.MODULE$ : (Option<B>)new Some(r);
/*     */     }
/*     */     
/*     */     public Iterator<Tuple2<A, B>> iterator() {
/* 423 */       return WrapAsScala$.MODULE$.<A>enumerationAsScalaIterator(underlying().keys()).map((Function1)new Wrappers$JDictionaryWrapper$$anonfun$iterator$1(this));
/*     */     }
/*     */     
/*     */     public class Wrappers$JDictionaryWrapper$$anonfun$iterator$1 extends AbstractFunction1<A, Tuple2<A, B>> implements Serializable {
/*     */       public static final long serialVersionUID = 0L;
/*     */       
/*     */       public final Tuple2<A, B> apply(Object k) {
/* 423 */         return new Tuple2(k, this.$outer.underlying().get(k));
/*     */       }
/*     */       
/*     */       public Wrappers$JDictionaryWrapper$$anonfun$iterator$1(Wrappers.JDictionaryWrapper $outer) {}
/*     */     }
/*     */     
/*     */     public void clear() {
/* 425 */       WrapAsScala$.MODULE$.<A, B>dictionaryAsScalaMap(underlying()).clear();
/*     */     }
/*     */   }
/*     */   
/*     */   public class JPropertiesWrapper$ extends AbstractFunction1<Properties, JPropertiesWrapper> implements Serializable {
/*     */     public final String toString() {
/* 428 */       return "JPropertiesWrapper";
/*     */     }
/*     */     
/*     */     public Wrappers.JPropertiesWrapper apply(Properties underlying) {
/* 428 */       return new Wrappers.JPropertiesWrapper(this.$outer, underlying);
/*     */     }
/*     */     
/*     */     public Option<Properties> unapply(Wrappers.JPropertiesWrapper x$0) {
/* 428 */       return (x$0 == null) ? (Option<Properties>)scala.None$.MODULE$ : (Option<Properties>)new Some(x$0.underlying());
/*     */     }
/*     */     
/*     */     private Object readResolve() {
/* 428 */       return this.$outer.JPropertiesWrapper();
/*     */     }
/*     */     
/*     */     public JPropertiesWrapper$(Wrappers $outer) {}
/*     */     
/*     */     public class Wrappers$JPropertiesWrapper$$anon$3 extends AbstractIterator<Tuple2<String, String>> {
/*     */       private final Iterator<Map.Entry<Object, Object>> ui;
/*     */       
/*     */       public Wrappers$JPropertiesWrapper$$anon$3(Wrappers.JPropertiesWrapper $outer) {
/* 455 */         this.ui = $outer.underlying().entrySet().iterator();
/*     */       }
/*     */       
/*     */       private Iterator<Map.Entry<Object, Object>> ui() {
/* 455 */         return this.ui;
/*     */       }
/*     */       
/*     */       public boolean hasNext() {
/* 456 */         return ui().hasNext();
/*     */       }
/*     */       
/*     */       public Tuple2<String, String> next() {
/* 458 */         Map.Entry e = ui().next();
/* 459 */         return new Tuple2(e.getKey(), e.getValue());
/*     */       }
/*     */     }
/*     */   }
/*     */   
/*     */   public class JPropertiesWrapper extends AbstractMap<String, String> implements Map<String, String>, MapLike<String, String, JPropertiesWrapper>, Product, Serializable {
/*     */     private final Properties underlying;
/*     */     
/*     */     public Properties underlying() {
/*     */       return this.underlying;
/*     */     }
/*     */     
/*     */     public JPropertiesWrapper copy(Properties underlying) {
/*     */       return new JPropertiesWrapper(scala$collection$convert$Wrappers$JPropertiesWrapper$$$outer(), underlying);
/*     */     }
/*     */     
/*     */     public Properties copy$default$1() {
/*     */       return underlying();
/*     */     }
/*     */     
/*     */     public String productPrefix() {
/*     */       return "JPropertiesWrapper";
/*     */     }
/*     */     
/*     */     public int productArity() {
/*     */       return 1;
/*     */     }
/*     */     
/*     */     public Object productElement(int x$1) {
/*     */       switch (x$1) {
/*     */         default:
/*     */           throw new IndexOutOfBoundsException(BoxesRunTime.boxToInteger(x$1).toString());
/*     */         case 0:
/*     */           break;
/*     */       } 
/*     */       return underlying();
/*     */     }
/*     */     
/*     */     public Iterator<Object> productIterator() {
/*     */       return scala.runtime.ScalaRunTime$.MODULE$.typedProductIterator(this);
/*     */     }
/*     */     
/*     */     public JPropertiesWrapper(Wrappers $outer, Properties underlying) {
/*     */       Product.class.$init$(this);
/*     */     }
/*     */     
/*     */     public int size() {
/*     */       return underlying().size();
/*     */     }
/*     */     
/*     */     public Option<String> get(String k) {
/*     */       Object v = underlying().get(k);
/*     */       return (v == null) ? (Option<String>)scala.None$.MODULE$ : (Option<String>)new Some(v);
/*     */     }
/*     */     
/*     */     public JPropertiesWrapper $plus$eq(Tuple2 kv) {
/*     */       underlying().put(kv._1(), kv._2());
/*     */       return this;
/*     */     }
/*     */     
/*     */     public JPropertiesWrapper $minus$eq(String key) {
/*     */       underlying().remove(key);
/*     */       return this;
/*     */     }
/*     */     
/*     */     public Option<String> put(String k, String v) {
/*     */       Object r = underlying().put(k, v);
/*     */       return (r == null) ? (Option<String>)scala.None$.MODULE$ : (Option<String>)new Some(r);
/*     */     }
/*     */     
/*     */     public void update(String k, String v) {
/*     */       underlying().put(k, v);
/*     */     }
/*     */     
/*     */     public Option<String> remove(String k) {
/*     */       Object r = underlying().remove(k);
/*     */       return (r == null) ? (Option<String>)scala.None$.MODULE$ : (Option<String>)new Some(r);
/*     */     }
/*     */     
/*     */     public Iterator<Tuple2<String, String>> iterator() {
/*     */       return (Iterator<Tuple2<String, String>>)new Wrappers$JPropertiesWrapper$$anon$3(this);
/*     */     }
/*     */     
/*     */     public class Wrappers$JPropertiesWrapper$$anon$3 extends AbstractIterator<Tuple2<String, String>> {
/*     */       private final Iterator<Map.Entry<Object, Object>> ui;
/*     */       
/*     */       public Wrappers$JPropertiesWrapper$$anon$3(Wrappers.JPropertiesWrapper $outer) {
/*     */         this.ui = $outer.underlying().entrySet().iterator();
/*     */       }
/*     */       
/*     */       private Iterator<Map.Entry<Object, Object>> ui() {
/*     */         return this.ui;
/*     */       }
/*     */       
/*     */       public boolean hasNext() {
/*     */         return ui().hasNext();
/*     */       }
/*     */       
/*     */       public Tuple2<String, String> next() {
/*     */         Map.Entry e = ui().next();
/* 459 */         return new Tuple2(e.getKey(), e.getValue());
/*     */       }
/*     */     }
/*     */     
/*     */     public void clear() {
/* 463 */       underlying().clear();
/*     */     }
/*     */     
/*     */     public JPropertiesWrapper empty() {
/* 465 */       return new JPropertiesWrapper(scala$collection$convert$Wrappers$JPropertiesWrapper$$$outer(), new Properties());
/*     */     }
/*     */     
/*     */     public String getProperty(String key) {
/* 467 */       return underlying().getProperty(key);
/*     */     }
/*     */     
/*     */     public String getProperty(String key, String defaultValue) {
/* 470 */       return underlying().getProperty(key, defaultValue);
/*     */     }
/*     */     
/*     */     public Object setProperty(String key, String value) {
/* 473 */       return underlying().setProperty(key, value);
/*     */     }
/*     */   }
/*     */   
/*     */   public interface IterableWrapperTrait<A> {
/*     */     Iterable<A> underlying();
/*     */     
/*     */     int size();
/*     */     
/*     */     Wrappers.IteratorWrapper<A> iterator();
/*     */     
/*     */     boolean isEmpty();
/*     */   }
/*     */ }


/* Location:              D:\#source-code\TheFlightSims\TFSLibrary\World2Xplane\World2XPlane.jar!\scala\collection\convert\Wrappers.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */